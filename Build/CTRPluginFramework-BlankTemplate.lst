00000000 d _TLS_MODULE_BASE_
00000000 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00000008 00000001 D CTRPluginFramework::PrivColor::_format
0000000c 00000008 B CTRPluginFramework::Renderer::_rendererContext
00000014 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000024 00000001 B CTRPluginFramework::PrivColor::_useClamp
00000025 00000001 b __tls_guard
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000128 t ClearMem
0700013c t ClrLoop
07000154 T _init
0700016c T initLib
0700018c T __ctru_exit
07000198 t .udivsi3_skip_div0_test
07000198 T __aeabi_uidiv
07000198 000001ec T __udivsi3
07000384 00000020 T __aeabi_uidivmod
070003a4 T __aeabi_idiv
070003a4 00000220 T __divsi3
070003ac t .divsi3_skip_div0_test
070005c4 00000020 T __aeabi_idivmod
070005e4 00000004 W __aeabi_idiv0
070005e4 00000004 W __aeabi_ldiv0
070005e8 0000019c T __aeabi_frsub
070005f0 00000194 T __aeabi_fsub
070005f0 00000194 T __subsf3
070005f4 00000190 T __addsf3
070005f4 00000190 T __aeabi_fadd
07000784 00000028 T __aeabi_ui2f
07000784 00000028 T __floatunsisf
0700078c 00000020 T __aeabi_i2f
0700078c 00000020 T __floatsisf
070007ac 0000008c T __aeabi_ul2f
070007ac 0000008c T __floatundisf
070007bc 0000007c T __aeabi_l2f
070007bc 0000007c T __floatdisf
07000838 T __aeabi_ldivmod
0700090c 00000014 T __restore_core_regs
0700090c 00000014 T restore_core_regs
07000920 T __gnu_Unwind_Restore_VFP
07000928 T __gnu_Unwind_Save_VFP
07000930 T __gnu_Unwind_Restore_VFP_D
07000938 T __gnu_Unwind_Save_VFP_D
07000940 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000948 T __gnu_Unwind_Save_VFP_D_16_to_31
07000950 T __gnu_Unwind_Restore_WMMXD
07000994 T __gnu_Unwind_Save_WMMXD
070009d8 T __gnu_Unwind_Restore_WMMXC
070009ec T __gnu_Unwind_Save_WMMXC
07000a00 00000024 T ___Unwind_RaiseException
07000a00 00000024 T _Unwind_RaiseException
07000a24 00000024 T ___Unwind_Resume
07000a24 00000024 T _Unwind_Resume
07000a48 00000024 T ___Unwind_Resume_or_Rethrow
07000a48 00000024 T _Unwind_Resume_or_Rethrow
07000a6c 00000024 T ___Unwind_ForcedUnwind
07000a6c 00000024 T _Unwind_ForcedUnwind
07000a90 00000024 T ___Unwind_Backtrace
07000a90 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t __do_global_dtors_aux
0700128c t frame_dummy
070012b8 0000003c t __tcf_0
070012f4 00000080 t __static_initialization_and_destruction_0(int, int) [clone .constprop.0]
07001374 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070013f8 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07001454 00000028 T CTRPluginFramework::InfiniteBomb(CTRPluginFramework::MenuEntry*)
0700147c 00000028 T CTRPluginFramework::InfiniteBombchu(CTRPluginFramework::MenuEntry*)
070014a4 00000024 T CTRPluginFramework::InfiniteSlingshot(CTRPluginFramework::MenuEntry*)
070014c8 00000010 T CTRPluginFramework::InfiniteStick(CTRPluginFramework::MenuEntry*)
070014d8 00000010 T CTRPluginFramework::InfiniteArrows(CTRPluginFramework::MenuEntry*)
070014e8 00000010 T CTRPluginFramework::InfiniteNuts(CTRPluginFramework::MenuEntry*)
070014f8 0000003c T CTRPluginFramework::InfiniteExplosives(CTRPluginFramework::MenuEntry*)
07001534 00000100 T CTRPluginFramework::Invincible(CTRPluginFramework::MenuEntry*)
07001634 00000024 T CTRPluginFramework::RefillHeart(CTRPluginFramework::MenuEntry*)
07001658 0000004c T CTRPluginFramework::RefillLargeMagicbar(CTRPluginFramework::MenuEntry*)
070016a4 00000014 T CTRPluginFramework::MaxRupees(CTRPluginFramework::MenuEntry*)
070016b8 00000010 T CTRPluginFramework::CollectHeartPiecesInOverworldAsMany(CTRPluginFramework::MenuEntry*)
070016c8 00000014 T CTRPluginFramework::AlwaysHaveNayrusLoveActivated(CTRPluginFramework::MenuEntry*)
070016dc 00000048 T CTRPluginFramework::UseAllItems(CTRPluginFramework::MenuEntry*)
07001724 00000010 T CTRPluginFramework::OpenAnyChestInTheGameAsManyTimes(CTRPluginFramework::MenuEntry*)
07001734 0000009c T CTRPluginFramework::TriggerSwords(int)
070017d0 00000028 T CTRPluginFramework::UnlockKokiriSword(CTRPluginFramework::MenuEntry*)
070017f8 00000028 T CTRPluginFramework::UnlockExcaliburSword(CTRPluginFramework::MenuEntry*)
07001820 00000028 T CTRPluginFramework::UnlockBiggoronSword(CTRPluginFramework::MenuEntry*)
07001848 000000a0 T CTRPluginFramework::TriggerShields(int)
070018e8 00000028 T CTRPluginFramework::UnlockWoodShield(CTRPluginFramework::MenuEntry*)
07001910 00000028 T CTRPluginFramework::UnlockHyruleShield(CTRPluginFramework::MenuEntry*)
07001938 00000028 T CTRPluginFramework::UnlockMirrorShield(CTRPluginFramework::MenuEntry*)
07001960 000000ec T CTRPluginFramework::MoonJump(CTRPluginFramework::MenuEntry*)
07001a4c 00000184 T CTRPluginFramework::MoveFast(CTRPluginFramework::MenuEntry*)
07001bd0 00000044 T CTRPluginFramework::SwordGlitch(CTRPluginFramework::MenuEntry*)
07001c14 00000050 T CTRPluginFramework::StickFire(CTRPluginFramework::MenuEntry*)
07001c64 00000028 T CTRPluginFramework::Skulltulas(CTRPluginFramework::MenuEntry*)
07001c8c 00000064 T CTRPluginFramework::GiantLink(CTRPluginFramework::MenuEntry*)
07001cf0 00000064 T CTRPluginFramework::MiniLink(CTRPluginFramework::MenuEntry*)
07001d54 00000044 T CTRPluginFramework::PaperLink(CTRPluginFramework::MenuEntry*)
07001d98 00000064 T CTRPluginFramework::NormalLink(CTRPluginFramework::MenuEntry*)
07001dfc 00000014 T CTRPluginFramework::PurpleGauntlet(CTRPluginFramework::MenuEntry*)
07001e10 00000014 T CTRPluginFramework::GreenGauntlet(CTRPluginFramework::MenuEntry*)
07001e24 00000014 T CTRPluginFramework::BlueGauntlet(CTRPluginFramework::MenuEntry*)
07001e38 00000014 T CTRPluginFramework::BlackGauntlet(CTRPluginFramework::MenuEntry*)
07001e4c 00000014 T CTRPluginFramework::AlwaysAdultLinkVoice(CTRPluginFramework::MenuEntry*)
07001e60 00000014 T CTRPluginFramework::AlwaysChildLinkVoice(CTRPluginFramework::MenuEntry*)
07001e74 00000118 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07001f8c 00000124 T CTRPluginFramework::InventoryModifier(CTRPluginFramework::MenuEntry*)
070020b0 00000008 t _GLOBAL__sub_I__ZN18CTRPluginFramework12InfiniteBombEPNS_9MenuEntryE
070020b8 00000008 t _GLOBAL__sub_D__ZN18CTRPluginFramework12InfiniteBombEPNS_9MenuEntryE
070020c0 00000018 t __tcf_0
070020d8 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0700215c 000000e0 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
0700223c 000001e0 t CTRPluginFramework::ToggleTouchscreenForceOn()
0700241c 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07002420 00000004 T CTRPluginFramework::OnProcessExit()
07002424 00000080 W std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::vector(std::initializer_list<CTRPluginFramework::MenuEntry*>, std::allocator<CTRPluginFramework::MenuEntry*> const&)
07002424 00000080 W std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::vector(std::initializer_list<CTRPluginFramework::MenuEntry*>, std::allocator<CTRPluginFramework::MenuEntry*> const&)
070024a4 00000118 W std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> >::vector(std::initializer_list<CTRPluginFramework::Hotkey>, std::allocator<CTRPluginFramework::Hotkey> const&)
070024a4 00000118 W std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> >::vector(std::initializer_list<CTRPluginFramework::Hotkey>, std::allocator<CTRPluginFramework::Hotkey> const&)
070025bc 0000003c W std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> >::~vector()
070025bc 0000003c W std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> >::~vector()
070025f8 00000020 W std::_Vector_base<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::~_Vector_base()
070025f8 00000020 W std::_Vector_base<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> >::~_Vector_base()
07002618 00001178 T CTRPluginFramework::main()
07003790 T svcCustomBackdoor
07003798 T svcConvertVAToPA
070037a0 T svcFlushDataCacheRange
070037a8 T svcInvalidateEntireInstructionCache
070037b0 T svcMapProcessMemoryEx
070037c4 T svcUnmapProcessMemoryEx
070037cc T svcControlProcess
070037d4 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
07003884 0000001c T CTRPluginFramework::ResetColor[abi:cxx11]()
070038a0 00000068 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07003908 0000003c T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07003944 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07003944 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07003970 00000018 T CTRPluginFramework::LineReader::~LineReader()
07003970 00000018 T CTRPluginFramework::LineReader::~LineReader()
07003988 0000017c T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07003b04 00000014 T CTRPluginFramework::Touch::IsDown()
07003b18 0000002c T CTRPluginFramework::Touch::GetPosition()
07003b44 00000010 T CTRPluginFramework::Process::GetHandle()
07003b54 00000010 T CTRPluginFramework::Process::GetTitleID()
07003b64 000000b4 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07003c18 000000a0 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07003cb8 00000024 T CTRPluginFramework::Process::GetTextSize()
07003cdc 00000008 T CTRPluginFramework::Process::Pause()
07003ce4 00000010 T CTRPluginFramework::Process::Play(unsigned long)
07003cf4 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
07003d9c 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
07003da0 00000050 T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
07003df0 0000001c T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
07003e0c 0000001c T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
07003e28 0000001c T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
07003e44 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
07003e64 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
07003e84 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
07003ea4 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
07003ec8 00000160 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004028 00000254 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700427c 00000150 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070043cc 0000016c T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004538 00000088 T CTRPluginFramework::File::Close() const
070045c0 00000224 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
070047e4 000000cc T CTRPluginFramework::File::Read(void*, unsigned long) const
070048b0 000000fc T CTRPluginFramework::File::Write(void const*, unsigned long)
070049ac 00000050 T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
070049fc 000000e8 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
07004ae4 00000008 T CTRPluginFramework::File::Tell() const
07004aec 00000034 T CTRPluginFramework::File::Rewind() const
07004b20 00000030 T CTRPluginFramework::File::Flush() const
07004b50 00000074 T CTRPluginFramework::File::GetSize() const
07004bc4 00000008 T CTRPluginFramework::File::IsOpen() const
07004bcc 000000b8 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
07004c88 00000048 T CTRPluginFramework::File::File()
07004c88 00000048 T CTRPluginFramework::File::File()
07004cd0 00000068 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07004cd0 00000068 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07004d38 00000020 T CTRPluginFramework::Controller::GetKeysDown()
07004d58 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
07004d74 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
07004d90 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
07004dac 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
07004dc8 0000003c T CTRPluginFramework::Controller::Update()
07004e04 00000078 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07004e04 00000078 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07004e7c 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
07004e7c 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
07004ea8 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
07004ebc 00000038 T CTRPluginFramework::PluginMenu::Run() const
07004ef4 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
07004efc 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
07004f0c 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07004f18 0000004c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07004f18 0000004c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07004f64 00000044 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07004f64 00000044 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07004fa8 0000007c T CTRPluginFramework::MessageBox::~MessageBox()
07004fa8 0000007c T CTRPluginFramework::MessageBox::~MessageBox()
07005024 00000008 T CTRPluginFramework::MessageBox::operator()() const
0700502c 0000007c T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> > const&)
0700502c 0000007c T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<CTRPluginFramework::MenuEntry*, std::allocator<CTRPluginFramework::MenuEntry*> > const&)
070050a8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070050a8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070050d0 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0700517c 000000bc T CTRPluginFramework::Hotkey::Hotkey(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700517c 000000bc T CTRPluginFramework::Hotkey::Hotkey(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07005238 00000024 T CTRPluginFramework::Hotkey::~Hotkey()
07005238 00000024 T CTRPluginFramework::Hotkey::~Hotkey()
0700525c 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07005264 00000008 T CTRPluginFramework::Hotkey::IsDown() const
0700526c 000000a8 T CTRPluginFramework::Hotkey::AskForKeys()
07005314 000000a4 T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
070053b8 00000238 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
070055f0 00000018 T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
070055f0 00000018 T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07005608 00000050 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07005608 00000050 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07005658 00000040 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07005698 00000180 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07005818 00000028 T CTRPluginFramework::HotkeyManager::Count()
07005840 00000340 W void std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> >::_M_realloc_insert<CTRPluginFramework::Hotkey const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hotkey*, std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> > >, CTRPluginFramework::Hotkey const&)
07005b80 000000f0 T CTRPluginFramework::HotkeyManager::operator+=(CTRPluginFramework::Hotkey const&)
07005c70 000002cc W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07005f3c 00000278 T CTRPluginFramework::HotkeyManager::AskForKeys()
070061b4 00000224 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
070063d8 0000004c t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
07006424 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006424 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006474 00000054 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006474 00000054 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070064c8 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
070064c8 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
070064f8 00000010 T CTRPluginFramework::MenuEntry::Disable() const
07006508 00000008 T CTRPluginFramework::MenuEntry::WasJustActivated() const
07006510 00000008 T CTRPluginFramework::MenuEntry::IsActivated() const
07006518 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
07006520 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070065e4 000000f4 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
070066d8 000000ac T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07006784 000000ac T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07006830 000000a0 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070068d0 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070068d0 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006918 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07006918 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07006984 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07006984 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
070069b0 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
070069b8 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
070069d4 00000028 T CTRPluginFramework::Keyboard::Open() const
070069fc 000000c8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
07006ac4 000001d4 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
07006c98 000000c8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07006d60 000001d4 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07006f34 000000c8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
07006ffc 000001d4 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
070071d0 00000098 T CTRPluginFramework::Keyboard::Open(float&) const
07007268 00000194 T CTRPluginFramework::Keyboard::Open(float&, float) const
070073fc 00000070 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
0700746c 00000084 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070074f0 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
070074f8 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
07007500 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
07007508 00000114 T CTRPluginFramework::Color::Fade(float)
0700761c 00000224 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07007840 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
07007880 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
07007888 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07007934 00000024 T OnLoadCro
07007958 00000004 W CTRPluginFramework::OnPluginToSwap()
0700795c 00000004 W CTRPluginFramework::OnPluginFromSwap()
07007960 00000304 T CTRPluginFramework::Initialize()
07007c64 000000ac T CTRPluginFramework::ThreadExit()
07007d10 00000058 T abort
07007d68 00000048 T CTRPluginFramework::ThreadInit(void*)
07007db0 000000a8 T __entrypoint
07007e58 00000618 T CTRPluginFramework::KeepThreadMain(void*)
07008470 00000040 t _GLOBAL__sub_I_g_gspEventThreadPriority
070084b0 00000020 t _GLOBAL__sub_D_g_gspEventThreadPriority
070084d0 000000b8 t NCSNDCmd_Add
07008588 00000084 t NCSNDCmd_Execute.constprop.0
0700860c 0000005c T ncsndNotifyAptEvent
07008668 00000004 t ncsndAptHook
0700866c 000001c8 T ncsndInit
07008834 000000ac T ncsndExit
070088e0 00000024 T ncsndInitializeSound
07008904 00000260 T ncsndPlaySound
07008b64 00000040 T ncsndStopSound
07008ba4 00000090 T ncsndIsPlaying
07008c34 T LoadCROHooked
07008c48 T AR__ExecuteRoutine
07008c70 t stackBak
07008c78 0000003c t __ctru_get_reent
07008cb4 0000003c T __getThreadLocalStorage
07008cf0 000000f4 T __system_initSyscalls
07008de4 00000020 T __libctru_exit
07008e04 00000020 T __appExit
07008e24 00000144 T __createThread
07008f68 00000138 T __startThread
070090a0 00000024 T threadGetHandle
070090c4 0000002c T threadFree
070090f0 00000024 T threadJoin
07009114 00000020 T threadGetCurrent
07009134 0000005c T threadExit
07009190 00000040 t _thread_begin
070091d0 00000088 T plgLdrExit
07009258 000000ec T plgLdrInit
07009344 00000050 T PLGLDR__GetPluginPath
07009394 00000024 T PLGLDR__FetchEvent
070093b8 000000d4 T PLGLDR__Reply
0700948c 000000a8 T __system_allocateHeaps
07009534 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
07009560 000001ac t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
0700970c 000002a8 t CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&) [clone .part.0] [clone .isra.0]
070099b4 000002e4 T CTRPluginFrameworkImpl::Services::GSP::Initialize()
07009c98 000000dc T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
07009d74 00000004 T __gsp__Update
07009d78 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
07009d90 00000028 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
07009db8 000000e0 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
07009e98 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
07009ee0 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
07009f14 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
07009f40 00000148 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
0700a088 00000030 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
0700a0b8 000000d0 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
0700a188 00000040 t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
0700a1c8 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
0700a1e8 000000cc T CTRPluginFramework::SystemImpl::Initialize()
0700a2b4 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
0700a2cc 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
0700a308 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
0700a328 0000003c T CTRPluginFramework::SystemImpl::Status()
0700a364 00000004 W std::_Sp_counted_ptr<decltype(nullptr), (__gnu_cxx::_Lock_policy)0>::_M_dispose()
0700a368 0000000c W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_destroy()
0700a374 00000278 t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*) [clone .part.0]
0700a5ec 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
0700a69c 0000028c T CTRPluginFramework::Screenshot::TaskCallback(void*)
0700a928 000003cc T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
0700acf4 00000388 T CTRPluginFramework::Screenshot::UpdateFileCount()
0700b07c 00000048 T CTRPluginFramework::Screenshot::Initialize()
0700b0c4 00000064 t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0700b128 000000c8 t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0700b1f0 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
0700b208 00000164 T CTRPluginFramework::ScreenImpl::Initialize()
0700b36c 00000054 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
0700b3c0 000000e4 T CTRPluginFramework::ScreenImpl::Fade(float)
0700b4a4 000000fc t CTRPluginFramework::ScreenImpl::Acquire(bool) [clone .part.0]
0700b5a0 0000005c T CTRPluginFramework::ScreenImpl::ImportFromGsp()
0700b5fc 00000028 T CTRPluginFramework::ScreenImpl::Release()
0700b624 0000007c T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
0700b6a0 00000098 T CTRPluginFramework::ScreenImpl::Clear(bool)
0700b738 00000034 T CTRPluginFramework::ScreenImpl::Copy()
0700b76c 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0700b774 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0700b7d0 00000050 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
0700b820 0000003c T CTRPluginFramework::ScreenImpl::Clean()
0700b85c 000000bc T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
0700b918 000000a4 T CTRPluginFramework::ScreenImpl::AcquireFromGsp(bool)
0700b9bc 0000007c T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
0700ba38 0000004c T CTRPluginFramework::ScreenImpl::SwapBuffer()
0700ba84 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
0700ba98 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
0700bab4 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
0700bad0 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
0700bad8 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
0700bae0 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
0700bae8 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
0700bb04 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
0700bb20 00000068 T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
0700bb88 00000030 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
0700bbb8 0000005c T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
0700bc14 00000064 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0700bc78 000000fc T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
0700bd74 000000a8 T CTRPluginFramework::Scheduler::Initialize()
0700be1c 0000004c T CTRPluginFramework::Scheduler::Exit()
0700be68 0000021c W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
0700c084 00000160 T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
0700c1e4 000001d0 W __gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > > std::__remove_if<__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, __gnu_cxx::__ops::_Iter_equals_val<std::shared_ptr<CTRPluginFramework::TaskContext> const> >(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, __gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, __gnu_cxx::__ops::_Iter_equals_val<std::shared_ptr<CTRPluginFramework::TaskContext> const>)
0700c3b4 000001e8 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
0700c59c 0000018c T CTRPluginFramework::Scheduler__CoreHandler(void*)
0700c728 00000094 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
0700c7bc 00000178 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
0700c934 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
0700c980 00000098 T CTRPluginFramework::ProcessImpl::Play(bool)
0700ca18 0000001c T CTRPluginFramework::ProcessImpl::LockGameThreads()
0700ca34 0000001c T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
0700ca50 00000064 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
0700cab4 00000074 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0700cb28 000000b0 T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
0700cbd8 000000c4 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
0700cc9c 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
0700ccd4 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
0700ccec t _store_reg_loop
0700cd0c 00000118 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
0700ce24 000000f0 T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
0700cf14 000000f0 T CTRPluginFramework::ProcessImpl::Initialize()
0700d004 0000006c T CTRPluginFramework::ProcessImpl::Pause(bool)
0700d070 0000010c T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
0700d17c 0000002c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0700d1a8 0000005c t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0700d204 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
0700d210 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
0700d220 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0700d238 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0700d278 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
0700d2bc 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
0700d2d0 00000004 T Kernel::Initialize()
0700d2d4 00000028 T Kernel::Memcpy(void*, void const*, unsigned long)
0700d2fc 0000000c T KProcess::GetCurrent()
0700d308 00000024 T KProcess::PatchCore2Access()
0700d32c 00000034 T KProcess__PatchCategory
0700d360 00000034 T KProcess__PatchMaxPriority
0700d394 00000028 T KProcess::PatchMaxThreads()
0700d3bc 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
0700d3dc 000002d4 t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
0700d6b0 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0700d760 000000d4 T CTRPluginFramework::HookManager::HookManager()
0700d760 000000d4 T CTRPluginFramework::HookManager::HookManager()
0700d838 000000e8 T __hook__CheckTlsValue
0700d920 00000108 T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
0700da28 00000068 T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
0700da90 00000064 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
0700daf4 0000000c T CTRPluginFramework::HookManager::Lock()
0700db00 0000000c T CTRPluginFramework::HookManager::Unlock()
0700db0c 00000064 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
0700db70 00000074 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
0700dbe4 00000134 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
0700dd18 00000090 T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
0700dda8 00000168 T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
0700df10 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
0700df1c 0000003c t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
0700df58 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0700df7c 00000004 t addrMapNodeDestructor(rbtree_node*)
0700df80 00000148 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0700e0c8 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0700e0d0 00000068 T CTRPluginFramework::Heap::Free(void*)
0700e138 0000000c T CTRPluginFramework::Heap::SpaceFree()
0700e144 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0700e150 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0700e170 00000284 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700e3f4 00000238 W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
0700e62c 000000cc T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0700e62c 000000cc T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0700e6f8 0000002c t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
0700e724 0000005c t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
0700e780 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
0700e788 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
0700e78c 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
0700e790 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
0700e7b4 0000004c T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
0700e800 00000130 W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
0700e930 0000025c T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
0700eb8c 00000024 t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0700ebb0 0000004c t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0700ebfc 00000104 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0700ebfc 00000104 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0700ed00 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
0700ed08 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
0700ed28 000001b0 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0700eed8 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0700eef8 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
0700ef14 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0700ef30 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
0700ef38 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
0700ef40 00000144 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
0700f088 00000f2c T CTRPluginFramework::PluginMenuImpl::Run()
0700ffb4 00000138 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
070100ec 000001e4 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
070102d0 000001cc T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0701049c 00000110 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
070105ac 00000140 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
070106ec 0000025c W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
07010948 000001f8 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
07010b40 000001dc T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07010d1c 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07010d28 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07010d48 00000390 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07010d48 00000390 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
070110d8 000002f0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
070110d8 000002f0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
070113c8 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
070113d0 00000094 t __tcf_0
07011464 00000110 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07011574 0000013c t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
070116b0 00000694 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070116b0 00000694 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07011d44 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
07011d50 000003ac T CTRPluginFramework::PluginMenuHome::_RenderTop()
070120fc 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
07012230 0000058c T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
070127bc 00000124 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
070128e0 00000090 T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07012970 000000e4 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
07012a54 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
07012ad8 000000b8 T CTRPluginFramework::PluginMenuHome::Init()
07012b90 000000a0 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
07012c30 00000060 T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07012c90 0000012c T CTRPluginFramework::PluginMenuHome::UpdateNote()
07012dbc 00000064 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07012e20 00000174 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07012f98 000003f8 T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
07013390 000002c4 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
07013654 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07013654 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07013690 000001a4 T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
07013834 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
0701388c 0000024c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07013ad8 0000005c W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
07013b34 00000150 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
07013c84 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
07013e20 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
07013e38 00000110 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
07013f48 00000374 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
070142bc 00000110 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
070143cc 00000088 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
07014454 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
07014478 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
0701448c 00000124 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
070145b0 00000094 t __tcf_0
07014644 000001f0 t CTRPluginFramework::ProcessPathString(unsigned char*)
07014834 00000070 t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070148a4 00000290 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
070148a4 00000290 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07014b34 000000b4 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
07014be8 000002e0 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
07014ec8 00000324 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
070151ec 000001d8 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
070153c4 000001b0 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
07015574 000003e4 T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
07015958 00000360 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
07015cb8 0000018c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07015e44 00000238 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
0701607c 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
07016148 00000248 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
07016390 00000238 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
070165c8 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
070165d8 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
070165e8 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
070165f8 00000058 W CTRPluginFramework::MenuItem::~MenuItem()
070165f8 00000058 W CTRPluginFramework::MenuItem::~MenuItem()
07016650 00000060 W CTRPluginFramework::MenuItem::~MenuItem()
070166b0 00000120 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
070166b0 00000120 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
070167d0 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
070167ec 000000d0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070167ec 000000d0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070168bc 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070168bc 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07016990 00000010 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
070169a0 00000294 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
07016c34 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](unsigned long)
07016c4c 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
07016c70 000000bc T CTRPluginFramework::MenuFolderImpl::Clear()
07016d2c 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
07016d3c 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
07016d5c 00000110 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
07016e6c 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
07016ecc 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
07016ee0 00000028 T CTRPluginFramework::MenuEntryImpl::Enable()
07016f08 000002d4 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
070171dc 00000078 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
070171dc 00000078 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07017254 00000080 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
070172d4 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
070172d4 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
070173c0 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
070173c0 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
070174b0 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
070174b8 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
070174cc 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
070174d8 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
070174e0 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
07017504 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
07017520 00000088 T CTRPluginFramework::MenuEntryImpl::_Execute()
070175a8 000000f4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
070175a8 000000f4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0701769c 0000014c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701769c 0000014c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
070177e8 00000044 T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
0701782c 00000060 T CTRPluginFramework::Menu::CloseAll()
0701788c 00000058 T CTRPluginFramework::Menu::~Menu()
0701788c 00000058 T CTRPluginFramework::Menu::~Menu()
070178e4 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
070178f0 00000008 T CTRPluginFramework::Menu::GetFolder() const
070178f8 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
07017900 00000040 T CTRPluginFramework::Menu::GetSelectedItem()
07017940 00000400 T CTRPluginFramework::Menu::Draw() const
07017d40 000000c0 T CTRPluginFramework::Menu::_ScrollUp(int)
07017e00 00000358 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
07018158 00000184 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
070182dc 0000008c T CTRPluginFramework::Menu::ShowNote()
07018368 00000008 T CTRPluginFramework::Menu::CloseNote()
07018370 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
07018378 0000003c W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
070183b4 00000044 T CTRPluginFramework::Menu::Pop()
070183f8 000000b0 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
070184a8 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07018558 000001ec T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07018558 000001ec T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07018744 00000200 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07018744 00000200 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07018944 000000b8 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07018944 000000b8 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
070189fc 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
07018a04 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(unsigned long)
07018a0c 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
07018a14 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
07018a1c 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
07018a24 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
07018a2c 00000068 T CTRPluginFramework::KeyboardImpl::Clear()
07018a94 00000198 T CTRPluginFramework::KeyboardImpl::_RenderTop()
07018c2c 000004d4 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
07019100 000001cc T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
070192cc 00000084 T CTRPluginFramework::UnitsToNextChar(char const*, int)
07019350 000000d4 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
07019424 00000090 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
070194b4 00000090 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
07019544 0000018c T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
070196d0 0000017c T CTRPluginFramework::KeyboardImpl::_Update(float)
0701984c 000006e4 T CTRPluginFramework::KeyboardImpl::_CheckKeys()
07019f30 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
07019f98 0000008c T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
0701a024 000000a8 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
0701a0cc 000005f8 T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
0701a6c4 0000008c T CTRPluginFramework::KeyboardImpl::operator()(int&)
0701a750 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0701a758 00000064 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0701a7bc 00000230 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
0701a9ec 00000114 W void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
0701ab00 00000110 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString* const&)
0701ac10 00000374 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
0701af84 00000188 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<char, CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, char&&, CTRPluginFramework::Rect<int>&)
0701b10c 0000007c W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
0701b188 00000190 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
0701b318 00000088 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
0701b3a0 00000580 T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0701b920 00000584 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
0701bea4 000001d8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<char const (&) [3], CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, char const (&) [3], CTRPluginFramework::Rect<int>&)
0701c07c 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
0701c138 000001d8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<char const (&) [4], CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, char const (&) [4], CTRPluginFramework::Rect<int>&)
0701c310 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
0701c3cc 00000a2c T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
0701cdf8 00000c40 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
0701da38 00000188 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<char&, CTRPluginFramework::Rect<int>&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, char&, CTRPluginFramework::Rect<int>&)
0701dbc0 0000007c W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
0701dc3c 00000204 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
0701de40 00000048 T CTRPluginFramework::KeyboardImpl::_Decimal()
0701de88 00000088 t CTRPluginFramework::KeyboardImpl::_Hexadecimal() [clone .part.0]
0701df10 00000020 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
0701df30 000000a8 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
0701dfd8 000005e0 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
0701e5b8 00000338 T CTRPluginFramework::KeyboardImpl::Run()
0701e8f0 0000004c W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0701e8f0 0000004c W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0701e93c 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
0701e980 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
0701e9ac 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
0701ea5c 00000060 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0701ea5c 00000060 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0701eabc 000000b0 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0701eb6c 00000140 T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0701ecac 00000084 T CTRPluginFramework::HotkeysModifier::_Update()
0701ed30 000001dc T CTRPluginFramework::HotkeysModifier::operator()()
0701ef0c 000002c8 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button const&)
0701f1d4 000002f8 T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701f1d4 000002f8 T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701f4cc 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0701f4cc 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0701f4d0 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
0701f4d0 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
0701f4d4 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0701f4d4 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0701f4d8 00000014 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0701f4ec 00000014 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
0701f500 00000014 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0701f514 000001a8 T CTRPluginFramework::HexEditor::ByteView::Draw()
0701f6bc 000000f8 T CTRPluginFramework::HexEditor::IntegerView::Draw()
0701f7b4 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
0701f8f0 000003dc T CTRPluginFramework::HexEditor::ByteView::UpdateView()
0701fccc 0000025c T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
0701ff28 00000324 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0702024c 000002b8 T CTRPluginFramework::HexEditor::_RenderTop(void*)
07020504 00000138 T CTRPluginFramework::HexEditor::~HexEditor()
07020504 00000138 T CTRPluginFramework::HexEditor::~HexEditor()
0702063c 0000019c T CTRPluginFramework::HexEditor::_CreateCheat()
070207d8 00000078 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
07020850 00000040 T CTRPluginFramework::HexEditor::_MoveForward()
07020890 000004c4 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07020890 000004c4 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07020d54 000000b4 T CTRPluginFramework::HexEditor::SetView(unsigned long)
07020e08 00000130 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
07020f38 00000010 T CTRPluginFramework::HexEditor::Refresh()
07020f48 00000248 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
07021190 0000008c T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
0702121c 0000009c T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
070212b8 000001b8 t CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short) [clone .part.0]
07021470 00000050 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
070214c0 00000050 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
07021510 00000050 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
07021560 00000108 T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
07021668 000000ec T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
07021754 000000dc T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
07021830 000002b0 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
07021ae0 00000234 T CTRPluginFramework::HexEditor::_Update()
07021d14 000001a4 T CTRPluginFramework::HexEditor::_JumpTo(int)
07021eb8 00000074 T CTRPluginFramework::HexEditor::_SaveThisAddress()
07021f2c 000002ec T CTRPluginFramework::HexEditor::_BrowseHistory()
07022218 000003ec T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07022604 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070226b4 0000068c t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07022d40 00000260 T CTRPluginFramework::GuideReader::GuideReader()
07022d40 00000260 T CTRPluginFramework::GuideReader::GuideReader()
07022fa0 00000190 T CTRPluginFramework::GuideReader::_LoadBMP()
07023130 000007a8 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.0]
070238d8 0000015c t CTRPluginFramework::GuideReader::Draw() [clone .part.0]
07023a34 000000a8 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07023adc 000000e8 T CTRPluginFramework::Converter::Converter()
07023adc 000000e8 T CTRPluginFramework::Converter::Converter()
07023bc4 00000010 T CTRPluginFramework::Converter::Instance()
07023bd4 00000114 T CTRPluginFramework::Converter::_Draw()
07023ce8 000002b0 T CTRPluginFramework::Converter::operator()(unsigned long)
07023f98 00000288 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
07024220 0000023c T CTRPluginFramework::Icon::DrawAbout(int, int)
0702445c 00000248 T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
070246a4 00000248 T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
070248ec 00000248 T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
07024b34 00000248 T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
07024d7c 00000248 T CTRPluginFramework::Icon::DrawClose(int, int, bool)
07024fc4 0000023c T CTRPluginFramework::Icon::DrawController(int, int)
07025200 00000248 T CTRPluginFramework::Icon::DrawCut(int, int, bool)
07025448 00000248 T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
07025690 00000248 T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
070258d8 00000248 T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
07025b20 0000023c T CTRPluginFramework::Icon::DrawFolder(int, int)
07025d5c 00000248 T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
07025fa4 0000023c T CTRPluginFramework::Icon::DrawFavorite(int, int)
070261e0 0000023c T CTRPluginFramework::Icon::DrawFile(int, int)
0702641c 0000023c T CTRPluginFramework::Icon::DrawGameController(int, int)
07026658 00000248 T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
070268a0 0000023c T CTRPluginFramework::Icon::DrawGrid(int, int)
07026adc 00000248 T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
07026d24 0000023c T CTRPluginFramework::Icon::DrawGuide(int, int)
07026f60 00000224 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
07027184 00000248 T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
070273cc 0000023c T CTRPluginFramework::Icon::DrawMore(int, int)
07027608 00000248 T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
07027850 0000023c T CTRPluginFramework::Icon::DrawRAM(int, int)
07027a8c 0000023c T CTRPluginFramework::Icon::DrawRestart(int, int)
07027cc8 0000023c T CTRPluginFramework::Icon::DrawRocket(int, int)
07027f04 0000023c T CTRPluginFramework::Icon::DrawSave(int, int)
07028140 0000023c T CTRPluginFramework::Icon::DrawSearch(int, int)
0702837c 0000023c T CTRPluginFramework::Icon::DrawSettings(int, int)
070285b8 0000023c T CTRPluginFramework::Icon::DrawShutdown(int, int)
070287f4 0000023c T CTRPluginFramework::Icon::DrawTools(int, int)
07028a30 00000248 T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
07028c78 0000023c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
07028eb4 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
07028ed0 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
07028f08 00000028 T CTRPluginFramework::Window::~Window()
07028f08 00000028 T CTRPluginFramework::Window::~Window()
07028f30 00000064 T CTRPluginFramework::Window::Draw() const
07028f94 000000dc T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07029070 00000018 T CTRPluginFramework::Window::DrawButton() const
07029088 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
070290a0 00000018 T CTRPluginFramework::Window::MustClose() const
070290b8 00000028 T CTRPluginFramework::Window::Close() const
070290e0 00000004 T CTRPluginFramework::Window::GetRect() const
070290e4 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
07029118 000000e0 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
070291f8 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
07029218 00000008 W CTRPluginFramework::Drawable::operator()()
07029220 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07029220 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07029234 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07029234 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07029254 0000002c T CTRPluginFramework::UIContainer::Draw()
07029280 0000003c T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
070292bc 00000110 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
070293cc 0000003c T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07029408 0000010c T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07029408 0000010c T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07029514 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
0702951c 00000038 T CTRPluginFramework::TouchKeyString::CanUse()
07029554 0000010c T CTRPluginFramework::TouchKeyString::Draw()
07029660 0000012c T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
0702978c 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
070297a4 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
070297b8 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
070297d0 00000078 T CTRPluginFramework::TouchKeyString::operator()()
07029848 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
07029850 000000f0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07029940 00000054 T CTRPluginFramework::TouchKey::~TouchKey()
07029940 00000054 T CTRPluginFramework::TouchKey::~TouchKey()
07029994 0000005c T CTRPluginFramework::TouchKey::~TouchKey()
070299f0 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
070299f0 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07029a7c 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07029a7c 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07029b34 00000090 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07029b34 00000090 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07029bc4 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
07029bcc 00000080 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07029c4c 00000074 T CTRPluginFramework::TouchKey::Draw()
07029cc0 000000b8 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07029d78 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
07029d80 00000110 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
07029e90 000001f8 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07029e90 000001f8 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
0702a088 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0702a08c 00000304 T CTRPluginFramework::TextBox::Draw()
0702a390 00000040 W CTRPluginFramework::TextBox::~TextBox()
0702a390 00000040 W CTRPluginFramework::TextBox::~TextBox()
0702a3d0 00000048 W CTRPluginFramework::TextBox::~TextBox()
0702a418 00000098 T CTRPluginFramework::TextBox::TextBox()
0702a418 00000098 T CTRPluginFramework::TextBox::TextBox()
0702a4b0 0000000c T CTRPluginFramework::TextBox::Open() const
0702a4bc 0000000c T CTRPluginFramework::TextBox::Close() const
0702a4c8 00000008 T CTRPluginFramework::TextBox::IsOpen() const
0702a4d0 00000258 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
0702a728 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0702a734 000000a0 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
0702a7d4 000000d8 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
0702a8ac 00000110 W void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_insert<unsigned char* const&>(__gnu_cxx::__normal_iterator<unsigned char**, std::vector<unsigned char*, std::allocator<unsigned char*> > >, unsigned char* const&)
0702a9bc 00000110 W void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_insert<unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char**, std::vector<unsigned char*, std::allocator<unsigned char*> > >, unsigned char*&&)
0702aacc 00000288 T CTRPluginFramework::TextBox::_GetTextInfos()
0702ad54 000001e4 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0702ad54 000001e4 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0702af38 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702b020 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0702b150 00000170 T CTRPluginFramework::Renderer::GetTextSize(char const*)
0702b2c0 000001f0 T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0702b4b0 00000244 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0702b6f4 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0702b758 000002e8 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color, unsigned long)
0702ba40 00000548 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int, unsigned long)
0702bf88 00000454 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*, unsigned long)
0702c3dc 0000006c T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0702c448 00000068 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0702c4b0 00000088 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0702c538 0000019c T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0702c6d4 000001b0 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0702c884 000000bc T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0702c940 00000220 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0702cb60 00000044 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0702cba4 000001d0 t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
0702cd74 00000018 t __tcf_0
0702cd8c 000001d8 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
0702cf64 00000190 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0702d0f4 00000098 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
0702d18c 000000b4 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0702d240 00000340 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0702d580 000001d0 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
0702d750 0000010c W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
0702d85c 0000003c W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
0702d898 000007a0 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
0702e038 000001f4 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0702e22c 00000050 T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0702e27c 00000314 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0702e590 000000cc T CTRPluginFramework::ProcessingLogo::Draw(int, int)
0702e65c 00000180 T CTRPluginFramework::Renderer::EndFrame(bool)
0702e7dc 00000024 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0702e800 00000020 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0702e820 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0702e84c 00000034 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0702e880 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0702e8a8 0000002c T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0702e8d4 00000024 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0702e8f8 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0702e928 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0702e970 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0702e9b4 00000170 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0702eb24 00000148 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0702ec6c 00000150 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0702edbc 00000164 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0702ef20 0000016c T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0702f08c 00000124 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
0702f1b0 00000030 T CTRPluginFramework::PrivColor::UseClamp(bool)
0702f1e0 00000078 T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
0702f258 00000044 t __tls_init
0702f258 00000044 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
0702f2a0 00000054 t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask)
0702f2f4 0000000c T CTRPluginFramework::OSDImpl::Lock()
0702f300 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0702f31c 0000000c T CTRPluginFramework::OSDImpl::Unlock()
0702f328 000000ec T CTRPluginFramework::OSDImpl::PauseFrame()
0702f418 000001dc T CTRPluginFramework::OSDImpl::WaitFramePaused()
0702f5f4 000000ac T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
0702f6a0 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
0702f6d0 000000b4 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
0702f784 000000a4 T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
0702f828 00000048 t CTRPluginFramework::GetBuffer(unsigned long)
0702f870 000000cc t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
0702f93c 00000080 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_release()
0702f9bc 00000088 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0702f9bc 00000088 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0702fa44 00000104 T CTRPluginFramework::OSDImpl::UpdateScreens()
0702fb48 00000154 T CTRPluginFramework::InstallOSD()
0702fc9c 00000058 T CTRPluginFramework::OSDImpl::_Initialize()
0702fcf4 000000f0 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0702fde8 0000036c T CTRPluginFramework::OSDImpl::Update()
07030154 000000e8 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
0703023c 00000cbc T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int)
07030ef8 00000098 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
07030f90 000000a4 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
07031034 00000098 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
070310cc 00000030 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
070310cc 00000030 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
070310fc 00000038 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07031134 00000080 T CTRPluginFramework::NumericTextBox::Draw()
070311b4 00000134 T CTRPluginFramework::NumericTextBox::_UpdateVal()
070312e8 0000006c T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070312e8 0000006c T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07031354 000000fc T CTRPluginFramework::NumericTextBox::operator()()
07031450 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
07031460 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
07031470 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
07031478 0000000c T CTRPluginFramework::NumericTextBox::Clear()
07031484 00000088 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0703150c 00000118 t CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.0] [clone .isra.0]
07031624 000002bc T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07031624 000002bc T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070318e0 00000210 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070318e0 00000210 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07031af0 000002e0 T CTRPluginFramework::MessageBoxImpl::_Draw()
07031dd0 00000208 T CTRPluginFramework::MessageBoxImpl::operator()()
07031fd8 00000010 T CTRPluginFramework::Glyph::Width() const
07031fe8 0000050c T CTRPluginFramework::GetOriginalGlyph(unsigned long)
070324f8 00000428 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
07032920 000000ac T CTRPluginFramework::Font::Initialize()
070329cc 0000026c W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
07032c38 00000140 T CTRPluginFramework::Font::CacheGlyph(unsigned long)
07032d78 00000090 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
07032e08 00000028 T CTRPluginFramework::Font::GetGlyph(char)
07032e30 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
07032e74 00000088 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
07032efc 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07032efc 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07032f00 00000014 T CTRPluginFramework::FloatingButton::Draw()
07032f14 00000014 T CTRPluginFramework::FloatingButton::operator()()
07032f28 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
07032f3c 00000160 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
0703309c 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0703309c 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070330dc 00000094 T CTRPluginFramework::ComboBox::Draw()
07033170 0000006c W CTRPluginFramework::ComboBox::~ComboBox()
070331dc 000000ac T CTRPluginFramework::ComboBox::operator()()
07033288 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
07033338 00000064 W CTRPluginFramework::ComboBox::~ComboBox()
07033338 00000064 W CTRPluginFramework::ComboBox::~ComboBox()
0703339c 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
0703339c 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
070333ec 00000050 T CTRPluginFramework::ComboBox::Clear()
0703343c 00000060 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703349c 00000098 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07033534 00000030 T CTRPluginFramework::Button::~Button()
07033534 00000030 T CTRPluginFramework::Button::~Button()
07033564 00000038 T CTRPluginFramework::Button::~Button()
0703359c 00000164 T CTRPluginFramework::Button::Draw()
07033700 00000070 T CTRPluginFramework::Button::operator()()
07033770 00000194 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
07033904 000001d0 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07033904 000001d0 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07033ad4 00000024 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07033ad4 00000024 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07033af8 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07033af8 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07033b8c 00000018 T CTRPluginFramework::Button::Enable(bool)
07033ba4 00000010 T CTRPluginFramework::Button::Enable()
07033bb4 00000010 T CTRPluginFramework::Button::Disable()
07033bc4 00000010 T CTRPluginFramework::Button::Lock()
07033bd4 00000010 T CTRPluginFramework::Button::Execute()
07033be4 00000018 T CTRPluginFramework::Button::SetState(bool)
07033bfc 00000010 T CTRPluginFramework::Button::GetState() const
07033c0c 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
07033c14 00000104 t CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&) [clone .part.0]
07033d18 000000ac T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07033d18 000000ac T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07033dc4 00000044 T CTRPluginFramework::BMPImage::~BMPImage()
07033dc4 00000044 T CTRPluginFramework::BMPImage::~BMPImage()
07033e08 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
07033e10 00000008 T CTRPluginFramework::BMPImage::Width() const
07033e18 00000008 T CTRPluginFramework::BMPImage::Height() const
07033e20 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
07033e28 00000010 T CTRPluginFramework::BMPImage::data() const
07033e38 00000034 T CTRPluginFramework::BMPImage::Unload()
07033e6c 00000298 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07034104 0000022c T CTRPluginFramework::BMPImage::OptimiseForRendering()
07034330 000000cc T CTRPluginFramework::BMPImage::Draw(int, int)
070343fc 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
07034404 00000104 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
07034508 000000a4 T CTRPluginFramework::BMPImage::_CreateBitmap()
070345ac 00000064 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
070345ac 00000064 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07034610 00000140 T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
07034750 00000728 T CTRPluginFramework::BMPImage::_LoadBitmap()
07034e78 00000160 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07034e78 00000160 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07034fd8 000008e0 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
070358b8 0000014c T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
07035a04 000000b4 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
07035ab8 000000d4 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
07035b8c 0000090c T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
07036498 00000420 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
070368b8 00000184 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
07036a3c 000001bc T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
07036bf8 000001bc T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
07036db4 000001a4 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
07036f58 000000ec T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
07037044 00000220 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
07037264 000002d8 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
0703753c 000000c0 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
070375fc 000000b8 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
070376b4 00000160 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
07037814 00000140 T ARM_Disasm::Decode01(unsigned long)
07037954 00000078 T ARM_Disasm::Decode11(unsigned long)
070379cc 00000058 T ARM_Disasm::DecodeMUL(unsigned long)
07037a24 00000118 T ARM_Disasm::DecodeALU(unsigned long)
07037b3c 00000114 T ARM_Disasm::Decode00(unsigned long)
07037c50 00000054 T ARM_Disasm::Decode(unsigned long)
07037ca4 00000110 W void std::vector<RegBlock, std::allocator<RegBlock> >::_M_realloc_insert<int&, int&>(__gnu_cxx::__normal_iterator<RegBlock*, std::vector<RegBlock, std::allocator<RegBlock> > >, int&, int&)
07037db4 0000056c T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
07038320 000003f0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
07038710 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07038710 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07038788 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
070387a4 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
070387f4 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070388a4 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070388a4 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070388f0 000002a0 T CTRPluginFramework::MenuEntryActionReplay::Update()
07038b90 0000018c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
07038d1c 00000144 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
07038e60 00002684 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0703b4e4 000000a0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
0703b584 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0703b5a4 00000150 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703b6f4 0000042c T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0703bb20 00000018 t __tcf_0
0703bb38 00000148 t std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::__find_if<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}> >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>, std::random_access_iterator_tag) [clone .constprop.0]
0703bc80 00000118 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0703bd98 0000001c T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
0703bdb4 000000d4 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703be88 000007ac T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0703c634 00000138 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reallocate_map(unsigned int, bool)
0703c76c 000000e4 W void std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::emplace_back<CTRPluginFramework::MenuFolderImpl*>(CTRPluginFramework::MenuFolderImpl*&&)
0703c850 00000eb0 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
0703d700 000000c4 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
0703d7c4 00000180 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
0703d944 00000124 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
0703da68 00000060 t __tcf_0
0703dac8 00000084 t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
0703db4c 000030bc t CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)
07040c08 00000140 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07040c08 00000140 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07040d48 00001894 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
070425dc 00000378 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
070425dc 00000378 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07042954 00000308 T CTRPluginFramework::ARCodeEditor::_RenderTop()
07042c5c 00000090 T CTRPluginFramework::ARCodeEditor::_Update()
07042cec 00000118 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07042e04 0000027c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
07043080 00000080 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07043100 000003a0 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
070434a0 0000075c T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
07043bfc 00000d5c T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
07044958 0000063c t CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&) [clone .part.0]
07044f94 000001b4 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
07045148 0000009c T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
070451e4 00000238 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
070451e4 00000238 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0704541c 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
07045458 00000150 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070455a8 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
070455a8 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
070455cc 00000030 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
070455fc 0000015c T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
070455fc 0000015c T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07045758 00000038 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07045758 00000038 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07045790 000000c0 T CTRPluginFramework::ARCodeContext::Update()
07045850 000000c0 T CTRPluginFramework::ARCodeContext::Clear()
07045910 000000b8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
070459c8 00000018 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
070459e0 000000c4 t CTRPluginFramework::Preferences::LoadBackgrounds() [clone .part.0]
07045aa4 0000011c T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
07045bc0 00000500 t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
070460c0 000002c4 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
07046384 000000c4 T CTRPluginFramework::Preferences::LoadSettings()
07046448 00000168 T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
070465b0 00000164 T CTRPluginFramework::Preferences::LoadSavedFavorites()
07046714 00000094 T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
070467a8 000001d4 T CTRPluginFramework::Preferences::WriteSettings()
0704697c 00000064 T CTRPluginFramework::Preferences::ApplyBacklight()
070469e0 00000018 T CTRPluginFramework::Preferences::Initialize()
070469f8 000000f8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
07046af0 00000050 t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
07046b40 00000070 t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07046bb0 000000d8 T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
07046c88 000004ac t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07047134 00001008 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0704813c 0000008c T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
070481c8 00000094 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0704825c 00000044 T CTRPluginFramework::InitializeRandomEngine()
070482a0 000000e0 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07048380 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07048388 0000004c T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070483d4 0000018c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07048560 000000c0 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
07048620 00000058 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
07048678 000000cc T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
07048744 0000004c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
07048790 00000018 t __tcf_0
070487a8 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
070487a8 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
070487d0 00000058 T CTRPluginFramework::LineWriter::~LineWriter()
070487d0 00000058 T CTRPluginFramework::LineWriter::~LineWriter()
07048828 00000078 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
070488a0 00000048 T CTRPluginFramework::LineWriter::Flush()
070488e8 0000006c T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07048954 00000060 T CTRPluginFramework::LineWriter::Close()
070489b4 00000020 T CTRPluginFramework::Time::AsSeconds() const
070489d4 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
070489fc 00000170 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
07048b6c 0000003c T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07048b6c 0000003c T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07048ba8 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
07048ba8 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
07048bc8 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
07048c1c 0000004c T CTRPluginFramework::ThreadEx::Join(bool)
07048c68 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
07048c70 00000124 W std::pair<std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> >, bool> std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_emplace_unique<std::pair<unsigned long, ThreadVars*> >(std::pair<unsigned long, ThreadVars*>&&)
07048d94 000001d8 T __ctrpf_getThreadVars
07048f6c 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
07048fa4 00000038 t _GLOBAL__sub_D___ctrpf_getThreadVars
07048fdc 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
07048fdc 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
07048fe0 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
07048fe4 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
07049014 00000014 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
07049028 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
0704902c 000000e4 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0704902c 000000e4 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07049110 00000048 T CTRPluginFramework::Task::Start() const
07049158 0000004c T CTRPluginFramework::Task::Start(void*) const
070491a4 00000064 T CTRPluginFramework::Task::Wait() const
07049208 00000010 T CTRPluginFramework::System::IsNew3DS()
07049218 00000010 T CTRPluginFramework::System::Reboot()
07049228 00000074 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0704929c 0000000c T CTRPluginFramework::HookContext::GetCurrent()
070492a8 00000030 T CTRPluginFramework::HookContext::GetCallCode()
070492d8 00000044 T CTRPluginFramework::Hook::Hook()
070492d8 00000044 T CTRPluginFramework::Hook::Hook()
0704931c 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
0704931c 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07049344 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07049344 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07049358 00000064 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
070493bc 00000054 T CTRPluginFramework::Hook::~Hook()
070493bc 00000054 T CTRPluginFramework::Hook::~Hook()
07049410 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
0704942c 0000002c T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
07049458 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
07049468 00000138 T CTRPluginFramework::Hook::Enable()
070495a0 0000002c T CTRPluginFramework::Hook::Disable()
070495cc 00000008 T CTRPluginFramework::Hook::GetContext() const
070495d4 0000000c T CTRPluginFramework::FwkSettings::Get()
070495e0 000000c4 T CTRPluginFramework::FwkSettings::SetThemeDefault()
070496a4 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07049754 00000268 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
070499bc 000002ec t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07049ca8 000005e8 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0704a290 000001ac T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704a43c 00000160 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704a59c 00000168 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704a704 00000254 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704a958 00000160 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704aab8 000002b0 T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0704ad68 00000050 T CTRPluginFramework::Directory::Close() const
0704adb8 000000b8 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
0704ae70 00000008 T CTRPluginFramework::Directory::IsOpen() const
0704ae78 0000003c T CTRPluginFramework::Directory::Directory()
0704ae78 0000003c T CTRPluginFramework::Directory::Directory()
0704aeb4 00000060 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0704aeb4 00000060 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0704af14 000000f4 T CTRPluginFramework::Directory::~Directory()
0704af14 000000f4 T CTRPluginFramework::Directory::~Directory()
0704b008 000002a8 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
0704b2b0 000001d0 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
0704b480 00000908 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0704bd88 00000218 T CTRPluginFramework::Directory::_List() const
0704bfa0 00000214 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0704c1b4 0000021c T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0704c3d0 00000020 T CTRPluginFramework::Clock::Clock()
0704c3d0 00000020 T CTRPluginFramework::Clock::Clock()
0704c3f0 00000030 T CTRPluginFramework::Clock::GetElapsedTime() const
0704c420 00000038 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
0704c458 00000038 T CTRPluginFramework::Clock::Restart()
0704c490 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
0704c494 0000000c T CTRPluginFramework::Sound::Sound()
0704c494 0000000c T CTRPluginFramework::Sound::Sound()
0704c4a0 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
0704c4a0 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
0704c4b4 0000003c T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0704c4b4 0000003c T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0704c4f0 000000c0 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
0704c5b0 00000080 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
0704c630 0000005c T CTRPluginFramework::Sound::~Sound()
0704c630 0000005c T CTRPluginFramework::Sound::~Sound()
0704c68c 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
0704c6a4 00000020 T CTRPluginFramework::Sound::Play()
0704c6c4 00000110 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
0704c7d4 00000090 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0704c864 00000014 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0704c864 00000014 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0704c878 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0704c878 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0704c894 00000394 t cwav_initialize
0704cc28 000000f4 t cwav_stopImpl.part.0
0704cd1c 00000004 T cwavUseEnvironment
0704cd20 00000034 T cwavSetVAToPACallback
0704cd54 00000050 T cwavLoad
0704cda4 000004a4 T cwavPlay
0704d248 00000064 T cwavStop
0704d2ac 00000170 T cwavFree
0704d41c T __aeabi_read_tp
0704d428 0000003c T fontEnsureMappedExtension
0704d464 00000080 T MemPool::CoalesceRight(MemBlock*)
0704d4e4 00000174 T MemPool::Allocate(MemChunk&, unsigned long, int)
0704d658 000000fc T MemPool::Deallocate(MemChunk const&)
0704d754 00000030 T MemPool::GetFreeSpace()
0704d784 00000094 T CTRPluginFramework::EventManager::EventManager()
0704d784 00000094 T CTRPluginFramework::EventManager::EventManager()
0704d818 000001f0 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0704da08 00000480 T CTRPluginFramework::EventManager::ProcessEvents()
0704de88 00000134 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0704dfbc 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0704dfc4 00000120 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0704dfc4 00000120 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0704e0e4 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
0704e0ec 0000001c T CTRPluginFramework::SoundImpl::Play(int, int)
0704e108 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
0704e108 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
0704e130 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704e3c0 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704e668 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704e8f8 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
0704e92c 00000348 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704ec74 00000154 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0704ec74 00000154 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0704edc8 00000054 T CTRPluginFramework::SubMenu::~SubMenu()
0704edc8 00000054 T CTRPluginFramework::SubMenu::~SubMenu()
0704ee1c 0000001c T CTRPluginFramework::SubMenu::operator()()
0704ee38 0000023c T CTRPluginFramework::SubMenu::Draw()
0704f074 000000ec T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
0704f160 00000008 T CTRPluginFramework::SubMenu::IsOpen()
0704f168 00000374 T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0704f4dc 00000024 T CTRPluginFramework::SubMenu::OptionsCount()
0704f500 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
0704f514 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
0704f528 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0704f53c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
0704f554 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0704f56c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
0704f584 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0704f59c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
0704f5b4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0704f5cc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
0704f5e4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0704f5fc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
0704f614 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0704f618 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
0704f61c 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
0704f644 00000094 t __tcf_0
0704f6d8 00000060 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
0704f738 00000210 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0704f948 000000e0 t CTRPluginFramework::MenuHotkeyModifier()
0704fa28 00000230 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
0704fc58 000000c4 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0704fd1c 00000250 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704ff6c 00000070 t CTRPluginFramework::Reboot()
0704ffdc 00000074 t CTRPluginFramework::Shutdown()
07050050 00000294 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
070502e4 000018c4 t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
07051ba8 0000015c T CTRPluginFramework::PluginMenuTools::UpdateSettings()
07051d04 0000141c T CTRPluginFramework::PluginMenuTools::InitMenu()
07053120 00000308 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07053120 00000308 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07053428 0000010c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
07053534 00000268 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0705379c 00000440 t CTRPluginFramework::UpdateScreenshotText()
07053bdc 00000158 T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
07053d34 000001ac T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07053ee0 00000b7c t CTRPluginFramework::ScreenshotMenuCallback()
07054a5c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
07054a7c 0000005c t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
07054ad8 00000044 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07054b1c 00000184 t CTRPluginFramework::ClearSearchFolder()
07054ca0 00000080 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
07054d20 0000011c T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
07054e3c 00000098 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
07054ed4 00000348 T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
0705521c 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0705521c 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0705585c 000003ac T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
07055c08 000000d4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
07055cdc 00000744 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
07056420 00000120 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
07056540 00000354 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
07056894 000000ec T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
07056980 00000070 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
070569f0 000003a8 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
07056d98 00000450 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
070571e8 000001c8 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
070571e8 000001c8 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
070573b0 00001180 T CTRPluginFramework::SearchMenu::Draw()
07058530 000005b0 T CTRPluginFramework::SearchMenu::Update()
07058ae0 0000014c T CTRPluginFramework::SearchMenu::_OpenExportFile()
07058c2c 000000cc T CTRPluginFramework::SearchMenu::_NewCheat()
07058cf8 000001c4 T CTRPluginFramework::SearchMenu::_Edit()
07058ebc 00000464 T CTRPluginFramework::SearchMenu::_Export()
07059320 0000031c T CTRPluginFramework::SearchMenu::_ExportAll()
0705963c 000001bc T CTRPluginFramework::SearchMenu::_ShowGame()
070597f8 000005f8 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07059df0 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
07059e10 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07059e10 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07059e30 00000028 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07059e58 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
07059eb0 00000080 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07059eb0 00000080 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07059f30 00000068 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07059f30 00000068 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07059f98 00000068 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07059f98 00000068 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705a000 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0705a004 00000048 T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0705a004 00000048 T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0705a04c 0000047c T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
0705a4c8 000000b0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0705a578 000001a8 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
0705a720 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
0705a748 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705a7cc 0000012c W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
0705a8f8 00000470 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
0705ad68 000005a0 T CTRPluginFramework::GatewayRAMDumper::operator()()
0705b308 00000004 T cwav_defaultVAToPA
0705b30c 00000004 T cwavEnvUseEnvironment
0705b310 00000008 T cwavEnvGetEnvironment
0705b318 00000004 T cwavEnvInitialize
0705b31c 00000004 T cwavEnvFinalize
0705b320 00000014 T cwavEnvCompatibleEncoding
0705b334 00000008 T cwavEnvGetChannelAmount
0705b33c 00000018 T cwavEnvIsChannelAvailable
0705b354 000000f8 T cwavEnvPlay
0705b44c 00000004 T cwavEnvChannelIsPlaying
0705b450 00000004 T cwavEnvStop
0705b454 00000044 T CTRPluginFramework::Search::UpdateProgress()
0705b498 0000004c T CTRPluginFramework::Search::Cancel()
0705b4e4 000001ec T CTRPluginFramework::Search::CheckNextRegion()
0705b6d0 00000008 T CTRPluginFramework::Search::GetHeader() const
0705b6d8 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
0705b720 000002d4 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0705b9f4 0000000c T CTRPluginFramework::Search::GetType() const
0705ba00 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0705ba18 0000007c T CTRPluginFramework::Search::WriteHeader()
0705ba94 0000051c T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0705ba94 0000051c T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0705bfb0 00000120 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0705c0d0 000000a0 T CTRPluginFramework::Search::CreateIndexTable()
0705c170 00000200 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705c170 00000200 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705c370 00000230 T CTRPluginFramework::Search::ExecuteSearch()
0705c5a0 000000cc T CTRPluginFramework::Search32::FirstSearchUnknown()
0705c66c 000000c4 T CTRPluginFramework::Search32::FirstSearchSpecified()
0705c730 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0705c7e0 00000098 T CTRPluginFramework::Search32::~Search32()
0705c7e0 00000098 T CTRPluginFramework::Search32::~Search32()
0705c878 0000001c T CTRPluginFramework::Search32::~Search32()
0705c898 00000278 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0705c898 00000278 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0705cb10 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705cb10 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705cb30 00000158 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0705cc88 000001e8 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0705ce70 00000144 W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0705cfb4 000001c0 T CTRPluginFramework::Search32::SecondSearchSpecified()
0705d174 00000124 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
0705d298 000001a8 T CTRPluginFramework::Search32::SecondSearchUnknown()
0705d440 00000188 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0705d5c8 000001ec T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
0705d7b4 000001ec T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
0705d9a0 00000098 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0705da38 000005f4 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
0705e02c 00000980 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705e9ac 00000958 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705f304 00000940 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705fc44 00000cc8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0706090c 000004a8 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07060db4 000004ac T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07061260 000004a8 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07061708 00000670 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07061d78 00000d8c T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07062b04 000007ac T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070632b0 00000468 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07063718 00000724 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07063e3c 00000930 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0706476c 00000958 T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070650c4 00000960 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07065a24 00000e60 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07066884 0000000c T __sync_init
07066890 00000018 T __sync_fini
070668a8 0000002c T syncArbitrateAddressWithTimeout
070668d4 0000001c T LightLock_Init
070668f0 00000094 T LightLock_Lock
07066984 00000044 T LightLock_TryLock
070669c8 00000040 T LightLock_Unlock
07066a08 00000024 T RecursiveLock_Init
07066a2c 00000030 T RecursiveLock_Lock
07066a5c 00000078 T RecursiveLock_TryLock
07066ad4 00000054 T RecursiveLock_Unlock
07066b28 00000040 T LightEvent_Init
07066b68 000000a4 T LightEvent_Clear
07066c0c 00000048 T LightEvent_Pulse
07066c54 000000c8 T LightEvent_Signal
07066d1c 000000b0 T LightEvent_Wait
07066dcc 00000014 T LightSemaphore_Init
07066de0 00000094 T LightSemaphore_Acquire
07066e74 00000064 T LightSemaphore_Release
07066ed8 00000084 W envGetHandle
07066f5c 00000050 W envDestroyHandles
07066fac 00000074 T osConvertVirtToPhys
07067020 00000054 T osGetTimeRef
07067074 000000e4 T osGetTime
07067158 00000074 T __libctru_gtod
070671cc 0000009c T fontEnsureMapped
07067268 000000fc T fontGlyphIndexFromCodePoint
07067364 0000006c T fontGetCharWidthInfo
070673d0 00000124 T srvInit
070674f4 00000058 T srvExit
0706754c 00000080 T srvGetServiceHandleDirect
070675cc 00000048 T srvGetServiceHandle
07067614 00000038 T srvPublishToSubscriber
0706764c 00000094 t mappableFindAddressWithin
070676e0 00000028 T mappableInit
07067708 00000080 T mappableAlloc
07067788 00000004 T mappableFree
0706778c 000000a4 T cfguInit
07067830 0000003c T cfguExit
0706786c 00000054 T CFGU_GetSystemLanguage
070678c0 000000f0 T gspExit
070679b0 0000008c T acInit
07067a3c 0000003c T acExit
07067a78 000000a4 T amInit
07067b1c 0000003c T amExit
07067b58 0000015c T aptSendCommand
07067cb4 00000030 T aptHook
07067ce4 00000030 T aptUnhook
07067d14 00000028 T APT_PrepareToCloseApplication
07067d3c 00000048 T APT_CloseApplication
07067d84 0000007c T APT_CheckNew3DS
07067e00 00000048 T APT_GetSharedFont
07067e48 00000024 W hidShouldUseIrrst
07067e6c 0000018c T hidInit
07067ff8 000000e8 T hidExit
070680e0 00000294 T hidScanInput
07068374 00000010 T hidKeysHeld
07068384 00000010 T hidKeysDown
07068394 00000010 T hidKeysUp
070683a4 00000018 T hidTouchRead
070683bc 0000000c T srvPmGetSessionHandle
070683c8 000000c8 T fsInit
07068490 0000003c T fsExit
070684cc 000000cc T FSUSER_OpenFile
07068598 000000bc T FSUSER_DeleteFile
07068654 000000f8 T FSUSER_RenameFile
0706874c 000000bc T FSUSER_DeleteDirectoryRecursively
07068808 000000d4 T FSUSER_CreateFile
070688dc 000000c4 T FSUSER_CreateDirectory
070689a0 000000f8 T FSUSER_RenameDirectory
07068a98 000000b4 T FSUSER_OpenDirectory
07068b4c 00000094 T FSUSER_OpenArchive
07068be0 00000058 T FSFILE_Read
07068c38 00000060 T FSFILE_Write
07068c98 00000038 T FSFILE_GetSize
07068cd0 00000028 T FSFILE_SetSize
07068cf8 0000003c T FSFILE_Close
07068d34 00000024 T FSFILE_Flush
07068d58 00000028 T FSFILE_SetPriority
07068d80 00000050 T FSDIR_Read
07068dd0 0000003c T FSDIR_Close
07068e0c 00000010 T rbtree_init
07068e1c 000001a0 t do_insert
07068fbc 00000008 T rbtree_insert
07068fc4 00000090 T rbtree_rotate
07069054 00000338 T rbtree_remove
0706938c 00000074 T rbtree_find
07069400 00000060 T encode_utf16
07069460 000000fc T encode_utf8
0706955c 000000e8 T utf16_to_utf8
07069644 00000064 T decode_utf16
070696a8 0000013c T decode_utf8
070697e4 000000c0 T utf8_to_utf16
070698a4 T svcQueryMemory
070698d4 T svcExitProcess
070698dc T svcCreateThread
070698fc T svcExitThread
07069904 T svcSleepThread
0706990c T svcSetThreadPriority
07069914 T svcReleaseMutex
0706991c T svcCreateEvent
07069930 T svcSignalEvent
07069938 T svcClearEvent
07069940 T svcMapMemoryBlock
07069948 T svcUnmapMemoryBlock
07069950 T svcCreateAddressArbiter
07069964 T svcArbitrateAddress
0706997c T svcArbitrateAddressNoTimeout
07069984 T svcCloseHandle
0706998c T svcWaitSynchronization
07069994 T svcWaitSynchronizationN
070699bc T svcDuplicateHandle
070699d0 T svcGetSystemTick
070699d8 T svcGetSystemInfo
070699f0 T svcGetProcessInfo
07069a08 T svcConnectToPort
07069a1c T svcSendSyncRequest
07069a24 T svcOpenProcess
07069a38 T svcBreak
07069a40 T svcInvalidateProcessDataCache
07069a48 T svcFlushProcessDataCache
07069a50 T svcKernelSetState
07069a58 T svcQueryProcessMemory
07069a7c 00000160 T irrstInit
07069bdc 000000cc T irrstExit
07069ca8 000000b0 T irrstScanInput
07069d58 00000024 T irrstKeysHeld
07069d7c 00000050 T rbtree_node_next
07069dcc 00000004 T operator delete(void*)
07069dd0 00000004 T operator delete(void*, std::nothrow_t const&)
07069dd4 00000004 T operator delete[](void*)
07069dd8 00000060 T __cxa_guard_acquire
07069e38 0000000c T __cxa_guard_release
07069e44 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07069e44 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07069e64 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
07069e90 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
07069e90 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
07069ea0 00000014 T std::get_new_handler()
07069eb4 0000005c T operator new(unsigned int)
07069f10 0000001c T operator new(unsigned int, std::nothrow_t const&)
07069f2c 00000004 T operator new[](unsigned int)
07069f30 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07069f30 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07069f50 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07069f7c 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07069fe8 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0706a0c4 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0706a108 00000004 T std::type_info::~type_info()
0706a108 00000004 T std::type_info::~type_info()
0706a10c 00000008 T std::type_info::__is_pointer_p() const
0706a10c 00000008 T std::type_info::__is_function_p() const
0706a114 0000004c T std::type_info::operator==(std::type_info const&) const
0706a160 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
0706a178 00000014 T std::__detail::_List_node_base::_M_unhook()
0706a18c 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
0706a1fc 00000288 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
0706a484 0000002c T std::__throw_bad_alloc()
0706a4b0 0000002c T std::__throw_bad_array_new_length()
0706a4dc 00000048 T std::__throw_logic_error(char const*)
0706a524 00000048 T std::__throw_invalid_argument(char const*)
0706a56c 00000048 T std::__throw_length_error(char const*)
0706a5b4 00000048 T std::__throw_out_of_range(char const*)
0706a5fc 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
0706a678 000000d0 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
0706a748 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
0706a828 0000000c T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
0706a834 00000070 T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
0706a8a4 00000080 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
0706a924 0000012c T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
0706aa50 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
0706aaa8 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
0706aabc 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
0706ab40 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
0706ab64 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
0706ab88 000000bc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0706ac44 00000100 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
0706ad44 0000007c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
0706adc0 0000009c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
0706ae5c 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
0706af80 0000028c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
0706b20c 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
0706b29c 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0706b340 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
0706b3b8 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
0706b40c 0000000c T std::bad_alloc::what() const
0706b418 00000020 T std::bad_alloc::~bad_alloc()
0706b418 00000020 T std::bad_alloc::~bad_alloc()
0706b438 0000002c T std::bad_alloc::~bad_alloc()
0706b464 0000000c T std::bad_array_new_length::what() const
0706b470 00000020 T std::bad_array_new_length::~bad_array_new_length()
0706b470 00000020 T std::bad_array_new_length::~bad_array_new_length()
0706b490 0000002c T std::bad_array_new_length::~bad_array_new_length()
0706b4bc 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0706b518 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0706b52c 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0706b52c 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0706b54c 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0706b578 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0706b5e0 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0706b60c 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0706b650 00000004 T operator delete(void*, unsigned int)
0706b654 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0706b724 00000098 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0706b7bc 00000044 T __cxa_allocate_exception
0706b800 00000030 T __cxa_free_exception
0706b830 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0706b870 T __cxa_end_cleanup
0706b880 00000134 T __cxa_type_match
0706b9b4 000000b4 T __cxa_begin_cleanup
0706ba68 000000b4 T __gnu_end_cleanup
0706bb1c 000000cc T __cxa_begin_catch
0706bbe8 000000e0 T __cxa_end_catch
0706bcc8 00000004 T std::exception::~exception()
0706bcc8 00000004 T std::exception::~exception()
0706bccc 00000004 T std::bad_exception::~bad_exception()
0706bccc 00000004 T std::bad_exception::~bad_exception()
0706bcd0 0000000c T transaction clone for std::exception::what() const
0706bcd0 0000000c T std::exception::what() const
0706bcdc 0000000c T transaction clone for std::bad_exception::what() const
0706bcdc 0000000c T std::bad_exception::what() const
0706bce8 00000018 T std::bad_exception::~bad_exception()
0706bd00 0000000c T __cxa_get_globals_fast
0706bd0c 0000000c T __cxa_get_globals
0706bd18 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0706be84 00000060 t base_of_encoded_value(unsigned char, _Unwind_Context*)
0706bee4 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0706bfbc 000006f8 T __gxx_personality_v0
0706c6b4 00000014 T __cxxabiv1::__terminate(void (*)())
0706c6c8 00000018 T std::terminate()
0706c6e0 0000000c T __cxxabiv1::__unexpected(void (*)())
0706c6ec 00000018 T std::unexpected()
0706c704 00000014 T std::get_terminate()
0706c718 00000014 T std::get_unexpected()
0706c72c 00000070 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0706c79c 00000070 T __cxa_init_primary_exception
0706c80c 00000058 T __cxa_throw
0706c864 000000b0 T __cxa_rethrow
0706c914 00000008 T std::logic_error::what() const
0706c914 00000008 T std::runtime_error::what() const
0706c91c 00000064 T std::logic_error::~logic_error()
0706c91c 00000064 T std::logic_error::~logic_error()
0706c980 00000064 T std::length_error::~length_error()
0706c980 00000064 T std::length_error::~length_error()
0706c9e4 00000064 T std::out_of_range::~out_of_range()
0706c9e4 00000064 T std::out_of_range::~out_of_range()
0706ca48 00000064 T std::invalid_argument::~invalid_argument()
0706ca48 00000064 T std::invalid_argument::~invalid_argument()
0706caac 0000006c T std::logic_error::~logic_error()
0706cb18 0000006c T std::out_of_range::~out_of_range()
0706cb84 0000006c T std::invalid_argument::~invalid_argument()
0706cbf0 0000006c T std::length_error::~length_error()
0706cc5c 000000d4 T std::logic_error::logic_error(char const*)
0706cc5c 000000d4 T std::logic_error::logic_error(char const*)
0706cd30 00000020 T std::invalid_argument::invalid_argument(char const*)
0706cd30 00000020 T std::invalid_argument::invalid_argument(char const*)
0706cd50 00000020 T std::length_error::length_error(char const*)
0706cd50 00000020 T std::length_error::length_error(char const*)
0706cd70 00000020 T std::out_of_range::out_of_range(char const*)
0706cd70 00000020 T std::out_of_range::out_of_range(char const*)
0706cd90 00000088 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0706ce18 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0706ce1c 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0706ce8c 0000002c T __cxa_call_terminate
0706ceb8 00000154 T __cxa_call_unexpected
0706d010 0000028c T log2
0706d29c 00000024 t with_errno
0706d2c0 00000050 T __math_divzero
0706d310 0000001c T __math_invalid
0706d330 00000164 T ceil
0706d494 000000b8 T ceilf
0706d550 00000174 T floor
0706d6c4 00000070 T roundf
0706d734 00000044 T __popcountsi2
0706d778 00000030 T __aeabi_f2lz
0706d778 00000030 T __fixsfdi
0706d7a8 00000040 T __aeabi_f2ulz
0706d7a8 00000040 T __fixunssfdi
0706d7e8 00000120 T __udivmoddi4
0706d908 00000018 t selfrel_offset31
0706d920 00000090 t search_EIT_table
0706d9b0 00000040 t __gnu_unwind_get_pr_addr
0706d9f0 00000108 t get_eit_entry
0706daf8 00000088 t restore_non_core_regs
0706db80 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
0706db94 00000004 t _Unwind_DebugHook
0706db98 00000064 t unwind_phase2
0706dbfc 00000134 t unwind_phase2_forced
0706dd30 000000a4 T __gnu_Unwind_RaiseException
0706ddd4 00000028 T __gnu_Unwind_ForcedUnwind
0706ddfc 00000074 T __gnu_Unwind_Resume
0706de70 00000020 T __gnu_Unwind_Resume_or_Rethrow
0706de90 00000004 T _Unwind_Complete
0706de94 00000018 T _Unwind_DeleteException
0706deac 0000005c T _Unwind_VRS_Get
0706df08 0000002c t _Unwind_GetGR
0706df34 0000005c T _Unwind_VRS_Set
0706df90 0000002c t _Unwind_SetGR
0706dfbc 000000c0 T __gnu_Unwind_Backtrace
0706e07c 0000041c t __gnu_unwind_pr_common
0706e498 00000008 T __aeabi_unwind_cpp_pr0
0706e4a0 00000008 W __aeabi_unwind_cpp_pr1
0706e4a8 00000008 W __aeabi_unwind_cpp_pr2
0706e4b0 000003f4 T _Unwind_VRS_Pop
0706e8a4 00000064 t next_unwind_byte
0706e908 0000002c t _Unwind_GetGR.constprop.0
0706e934 00000004 t unwind_UCB_from_context
0706e938 0000040c T __gnu_unwind_execute
0706ed44 00000048 T __gnu_unwind_frame
0706ed8c 00000010 T _Unwind_GetRegionStart
0706ed9c 0000001c T _Unwind_GetLanguageSpecificData
0706edb8 00000008 T _Unwind_GetDataRelBase
0706edc0 00000008 T _Unwind_GetTextRelBase
0706edc8 00000014 T atexit
0706eddc 00000028 T calloc
0706ee04 000000bc T _calloc_r
0706eec0 00000010 T ctime
0706eed0 0000000c T __errno
0706eedc 00000160 T _fclose_r
0706f03c 00000258 T __sflush_r
0706f294 00000094 T _fflush_r
0706f328 0000000c T _cleanup_r
0706f334 00000184 T __sinit
0706f4b8 0000000c T __sfp_lock_acquire
0706f4c4 0000000c T __sfp_lock_release
0706f4d0 000000f8 T _malloc_trim_r
0706f5c8 000002e4 T _free_r
0706f8ac 00000070 T _fwalk_reent
0706f91c 0000007c T __libc_init_array
0706f998 00000018 T isspace
0706f9b0 00000018 T isxdigit
0706f9c8 00000020 T localtime
0706f9e8 0000038c T localtime_r
0706fd74 00000138 T __smakebuf_r
0706feac 00000028 T memalign
0706fed4 00000150 T _memalign_r
07070024 00000020 T malloc
07070044 00000020 T free
07070064 000007e0 T _malloc_r
07070844 000000e0 T memchr
07070924 000000a8 T memcmp
070709cc 0000011c T memcpy
07070ae8 00000154 T memmove
07070c3c 00000118 T memset
07070d54 0000000c T __malloc_lock
07070d60 0000000c T __malloc_unlock
07070d6c 00000028 T realloc
07070d94 00000558 T _realloc_r
070712ec 000000cc T snprintf
070713b8 00000064 T sprintf
0707141c 00000044 T __sread
07071460 00000008 T __seofread
07071468 00000068 T __swrite
070714d0 00000048 T __sseek
07071518 00000008 T __sclose
07071520 00000128 t iso_year_adjust
07071648 00001094 t __strftime.isra.0
070726dc 00000004 T strftime
070726e0 0000005c T strlen
0707273c 000000dc T strncmp
07072818 000000c0 T strncpy
070728d8 00000048 T strnlen
07072920 00001368 T _strtod_l
07073c88 000000c4 T strtof
07073d4c 000001c4 t _strtoul_l.constprop.0
07073f10 00000004 T _strtoul_r
07073f14 00000030 T strtoul
07073f44 00000628 t get_arg
07074570 000035b8 T _svfprintf_r
07077b28 0000003c T time
07077b64 00000248 T __tzcalc_limits
07077dac 0000000c T __tz_lock
07077db8 0000000c T __tz_unlock
07077dc4 00000010 T _tzset_unlocked
07077dd4 00000474 T _tzset_unlocked_r
07078248 000000a4 T _vsnprintf_r
070782ec 00000038 T vsnprintf
07078324 00000054 T _wcrtomb_r
07078378 00000028 T _wcsrtombs_r
070783a0 0000000c T abs
070783ac 00000020 T asctime
070783cc 00000080 T asctime_r
0707844c 000000b0 T __register_exitproc
070784fc 000001ac t quorem
070786a8 000012cc T _dtoa_r
07079974 000000ec t rshift
07079a60 00000904 T __gethex
0707a364 0000004c T __match
0707a3b0 0000029c T __hexnan
0707a64c 000000c8 T _findenv_r
0707a714 00000018 T _getenv_r
0707a72c 0000000c T __gettzinfo
0707a738 00000250 T gmtime_r
0707a988 0000000c T labs
0707a994 0000000c T _localeconv_r
0707a9a0 00000010 T __locale_mb_cur_max
0707a9b0 000002e4 T __utf8_mbtowc
0707ac94 00000088 T _Balloc
0707ad1c 0000001c T _Bfree
0707ad38 000000f4 T __multadd
0707ae2c 00000110 T __s2b
0707af3c 00000058 T __hi0bits
0707af94 00000094 T __lo0bits
0707b028 000000a4 T __i2b
0707b0cc 00000204 T __multiply
0707b2d0 00000120 T __pow5mult
0707b3f0 0000013c T __lshift
0707b52c 00000058 T __mcmp
0707b584 000001cc T __mdiff
0707b750 00000074 T __ulp
0707b7c4 000000d0 T __b2d
0707b894 00000124 T __d2b
0707b9b8 00000078 T __ratio
0707ba30 00000088 T __copybits
0707bab8 0000005c T __any_on
0707bb14 0000000c T nanf
0707bb20 000000a8 T frexp
0707bbc8 00000064 T siprintf
0707bc2c 00000074 T siscanf
0707bca0 00000010 T nan
0707bcb0 000000cc T sniprintf
0707bd7c 000000f0 T strcpy
0707be6c 000001a4 t _strtol_l.part.0
0707c010 0000003c T _strtol_r
0707c04c 00000628 t get_arg
0707c674 00000190 T __ssprint_r
0707c804 00002274 T _svfiprintf_r
0707ea78 00000050 t get_arg
0707eac8 000000e0 T _sungetc_r
0707eba8 0000006c T __ssrefill_r
0707ec14 000000c8 T _sfread_r
0707ecdc 000022a0 T __ssvfiscanf_r
07080f7c 000000a8 T __submore
07081024 00000190 T _wcsnrtombs_l
070811b4 0000004c T _wcsnrtombs_r
07081200 000000f0 T __utf8_wctomb
070812f0 00000054 T __assert_func
07081344 0000000c T __env_lock
07081350 0000000c T __env_unlock
0708135c 0000003c T fiprintf
07081398 00000008 T iswspace
070813a0 00000068 T _mbrtowc_r
07081408 000000e4 T __sccl
070814ec 0000022c t _strtoll_l.constprop.0
07081718 00000004 T _strtoll_r
0708171c 00000244 t _strtoull_l.constprop.0
07081960 00000004 T _strtoull_r
07081964 00000628 t get_arg
07081f8c 00000030 T __sprint_r
07081fbc 0000233c T _vfiprintf_r
070842f8 000000d4 t __sbprintf
070843cc 00000154 T __swsetup_r
07084520 000004c0 T __sfvwrite_r
070849e0 0000003c T iswspace_l
07084a1c 000001d4 t __jp2uc
07084bf0 0000009c T _jp2uc_l
07084c8c 00000084 T category
07084d10 00000078 T _fstat_r
07084d88 00000038 T _gettimeofday_r
07084dc0 00000008 T _isatty_r
07084dc8 00000084 T _lseek_r
07084e4c 00000080 T _read_r
07084ecc 00000078 T _sbrk_r
07084f44 00000080 T _write_r
07084fc4 00000008 T __flockfile
07084fcc 00000008 T __funlockfile
07084fd4 00000018 T __libc_lock_acquire
07084fec 00000018 T __libc_lock_release
07085004 00000018 T __libc_lock_init_recursive
0708501c 00000018 T __libc_lock_acquire_recursive
07085034 00000018 T __libc_lock_release_recursive
0708504c 00000018 T __libc_lock_close_recursive
07085064 0000003c T __get_handle
070850a0 000000f4 T _close_r
07085194 00000028 T __getreent
070851bc 00000008 t null_write
070851c4 00000038 T __aeabi_d2lz
070851c4 00000038 T __fixdfdi
07085200 00000040 T __aeabi_d2ulz
07085200 00000040 T __fixunsdfdi
07085240 T _fini
07085e3c 00000004 R CTRPluginFramework::Color::DeepSkyBlue
07085e40 00000004 R CTRPluginFramework::Color::ForestGreen
07085e44 00000004 R CTRPluginFramework::Color::Red
07085e48 00000004 R CTRPluginFramework::Color::Blue
07085e4c 00000004 R CTRPluginFramework::Color::Cyan
07085e50 00000004 R CTRPluginFramework::Color::Gray
07085e54 00000004 R CTRPluginFramework::Color::Black
07085e58 00000004 R CTRPluginFramework::Color::Brown
07085e5c 00000004 R CTRPluginFramework::Color::Green
07085e60 00000004 R CTRPluginFramework::Color::White
07085e64 00000004 R CTRPluginFramework::Color::Orange
07085e68 00000004 R CTRPluginFramework::Color::Silver
07085e6c 00000004 R CTRPluginFramework::Color::Yellow
07085e70 00000004 R CTRPluginFramework::Color::DimGrey
07085e74 00000004 R CTRPluginFramework::Color::Magenta
07085e78 00000004 R CTRPluginFramework::Color::SkyBlue
07085e7c 00000004 R CTRPluginFramework::Color::DarkGrey
07085e80 00000004 R CTRPluginFramework::Color::BlackGrey
07085e84 00000004 R CTRPluginFramework::Color::Gainsboro
07085e88 00000004 R CTRPluginFramework::Color::LimeGreen
07085f4c 00000014 r CSWTCH.72
070860d8 00000014 r CTRPluginFramework::defaultSoundFiles
07086154 00000030 r CTRPluginFramework::g_byme
07086184 00000048 r CTRPluginFramework::g_ctrpf
07086264 00000014 V vtable for CTRPluginFramework::MenuItem
07086278 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
07086290 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
07086420 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
07086428 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
07086440 00000038 r CTRPluginFramework::ktable
07086478 00000038 r CTRPluginFramework::stable
0708663c 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
0708665c 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
0708667c 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
0708669c 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
070866f0 0000001c R vtable for CTRPluginFramework::TouchKey
0708670c 0000001c R vtable for CTRPluginFramework::TextBox
07086728 00000a00 r font
070871a4 00000058 r CTRPluginFramework::g_OSDPattern
070871fc 0000001c R vtable for CTRPluginFramework::NumericTextBox
0708722c 0000001c R vtable for CTRPluginFramework::FloatingButton
07087248 0000001c R vtable for CTRPluginFramework::ComboBox
07087264 0000001c R vtable for CTRPluginFramework::Button
07087280 00000008 r CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07087980 00000040 r cond_names
070879c0 00000010 r shift_names
070879d0 00000040 r RegNames
07087a10 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
070883dc 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
0708845c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
07088464 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
07088470 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
07088484 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
0708848c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
07088668 00000008 R CTRPluginFramework::Time::Zero
07088670 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>
0708868c 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
07088694 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
070886ac 00000384 r UserManualFilled15_array
07088a30 00000384 r Unsplash15_array
07088db4 00000384 r UnCheckedCheckbox_array
07089138 000009c4 r TrashFilled25_array
07089afc 000009c4 r Trash25_array
0708a4c0 00000384 r Star15_array
0708a844 00000384 r Shutdown15_array
0708abc8 00000384 r Settings15_array
0708af4c 00000384 r Search15_array
0708b2d0 000009c4 r Save25_array
0708bc94 00001900 r Rocket40_array
0708d594 00000384 r Restart15_array
0708d918 00000384 r RAM15_array
0708dc9c 000009c4 r PlusFilled25_array
0708e660 000009c4 r Plus25_array
0708f024 00000384 r More15_array
0708f3a8 00000384 r Maintenance15_array
0708f72c 000009c4 r KeyboardFilled25_array
070900f0 000009c4 r Keyboard25_array
07090ab4 000009c4 r InfoFilled25_array
07091478 000009c4 r Info25_array
07091e3c 00000384 r HandCursor15_array
070921c0 00000384 r Grid15_array
07092544 000009c4 r GameControllerFilled25_array
07092f08 000009c4 r GameController25_array
070938cc 00000384 r GameController15_array
07093c50 00000384 r FolderFilled_array
07093fd4 00000384 r File15_array
07094358 00000384 r EnterKeyFilled15_array
070946dc 00000384 r EnterKey15_array
07094a60 000009c4 r EditFilled25_array
07095424 000009c4 r Edit25_array
07095de8 000009c4 r DuplicateFilled25_array
070967ac 000009c4 r Duplicate25_array
07097170 00000e10 r DefaultKeyboardCustomIcon_array
07097f80 000009c4 r CutFilled25_array
07098944 000009c4 r Cut25_array
07099308 00000384 r Controller15_array
0709968c 00000640 r CloseWindowFilled20_array
07099ccc 00000640 r CloseWindow20_array
0709a30c 000009c4 r ClipboardFilled25_array
0709acd0 000009c4 r Clipboard25_array
0709b694 00000384 r ClearSymbolFilled15_array
0709ba18 00000384 r ClearSymbol15_array
0709bd9c 00000384 r CheckedCheckbox_array
0709c120 00000384 r CapsLockOnFilled15_array
0709c4a4 00000384 r CapsLockOn15_array
0709c828 000009c4 r AddFavoriteFilled25_array
0709d1ec 000009c4 r AddFavorite25_array
0709dbb0 00000384 r About15_array
0709e5fc 000000c9 V std::__detail::__to_chars_10_impl<unsigned long>(char*, unsigned int, unsigned long)::__digits
0709e6c8 000000c9 V std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)::__digits
0709e9d0 0000001c R vtable for CTRPluginFramework::MenuEntryTools
0709eb94 00000038 R vtable for CTRPluginFramework::Search
0709ebf8 00000038 R vtable for CTRPluginFramework::Search32
0709ecb8 0000000c R typeinfo for __gnu_cxx::recursive_init_error
0709ecc4 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
0709ece8 00000014 R vtable for __gnu_cxx::recursive_init_error
0709ecfc 00000001 R std::nothrow
0709ed00 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0709ed0c 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0709ed34 0000002c R vtable for __cxxabiv1::__si_class_type_info
0709ed60 00000008 R typeinfo for std::type_info
0709ed68 0000000d R typeinfo name for std::type_info
0709ed78 00000404 R std::__detail::__prime_list
0709f17c 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
0709f18c 00000018 V typeinfo name for std::_Sp_make_shared_tag
0709f1a4 00000008 V typeinfo for std::_Sp_make_shared_tag
0709f288 0000000c R typeinfo for std::bad_alloc
0709f294 0000000d R typeinfo name for std::bad_alloc
0709f2a4 00000014 R vtable for std::bad_alloc
0709f2d4 0000000c R typeinfo for std::bad_array_new_length
0709f2e0 00000019 R typeinfo name for std::bad_array_new_length
0709f2fc 00000014 R vtable for std::bad_array_new_length
0709f310 0000000c R typeinfo for __cxxabiv1::__class_type_info
0709f31c 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0709f340 0000002c R vtable for __cxxabiv1::__class_type_info
0709f390 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0709f398 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0709f3a0 0000000c R typeinfo for std::bad_exception
0709f3ac 00000008 R typeinfo for std::exception
0709f3b4 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0709f3d4 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0709f3f8 00000012 R typeinfo name for std::bad_exception
0709f40c 0000000d R typeinfo name for std::exception
0709f41c 00000014 R vtable for std::bad_exception
0709f430 0000000c R typeinfo for std::logic_error
0709f43c 0000000c R typeinfo for std::length_error
0709f448 0000000c R typeinfo for std::out_of_range
0709f454 0000000c R typeinfo for std::invalid_argument
0709f460 00000010 R typeinfo name for std::logic_error
0709f470 00000011 R typeinfo name for std::length_error
0709f484 00000011 R typeinfo name for std::out_of_range
0709f498 00000015 R typeinfo name for std::invalid_argument
0709f4b0 00000014 R vtable for std::logic_error
0709f4c4 00000014 R vtable for std::length_error
0709f4d8 00000014 R vtable for std::out_of_range
0709f4ec 00000014 R vtable for std::invalid_argument
0709f548 00000890 R __log2_data
0709fdd8 00000004 R _global_impure_ptr
0709fddc 00000060 R __month_lengths
0709fec4 00000014 r fpi.1
0709fed8 00000014 r fpinan.0
0709fef0 00000028 r tinytens
0709ff54 00000010 r blanks.1
0709ff64 00000010 r zeroes.0
070a00cc 000000fc R _C_time_locale
070a023c 00000015 r day_name.1
070a0254 00000024 r mon_name.0
070a0278 00000101 R _ctype_
070a0428 00000100 R __hexdig
070a0528 0000000c R _C_numeric_locale
070a05b8 00000028 R __mprec_bigtens
070a05e0 000000c8 R __mprec_tens
070a06a8 0000000c r p05.0
070a06b4 0000006c R __action_table
070a0720 00000100 R __chclass
070a0820 0000006c R __state_table
070a088c 00000010 r blanks.1
070a089c 00000010 r zeroes.0
070a08ac 00000022 r basefix.0
070a0910 00000010 r blanks.1
070a0920 00000010 r zeroes.0
070a0944 000000bc r a1
070a0a00 000000bc r a2
070a0abc 0000005b r a3
070a0b18 00000070 r a6
070a0b88 000000a2 r a7
070a0c2c 00000040 r a8
070a0c6c 0000172a r b02cf
070a2398 00001a7c r d02f4
070a3e14 000031e6 r categories
070a7004 00000070 R dotab_stdnull
070a7184 R __exidx_start
070a73d4 R __exidx_end
070a73d4 00000004 D cwavCurrentVAPAConvCallback
070a73d8 00000001 D CTRPluginFramework::g_keepRunning
070a73d9 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
070a73da 00000001 D CTRPluginFramework::SystemImpl::Language
070a73dc 00000004 D CTRPluginFramework::Screenshot::Hotkeys
070a73e0 00000004 D CTRPluginFramework::Screenshot::Screens
070a73e4 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
070a73e8 00000004 D CTRPluginFramework::RendererPriv::g_customColor
070a73ec 000001f4 D opcode_names
070a75e0 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
070a75e4 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
070a75e8 00000004 D CTRPluginFramework::FwkSettings::Header
070a75ec 00000004 D g_charPerSheet
070a75f0 00000004 D UserManualFilled15
070a75f4 00000004 D Unsplash15
070a75f8 00000004 D UnCheckedCheckbox
070a75fc 00000004 D TrashFilled25
070a7600 00000004 D Trash25
070a7604 00000004 D Star15
070a7608 00000004 D Shutdown15
070a760c 00000004 D Settings15
070a7610 00000004 D Search15
070a7614 00000004 D Save25
070a7618 00000004 D Rocket40
070a761c 00000004 D Restart15
070a7620 00000004 D RAM15
070a7624 00000004 D PlusFilled25
070a7628 00000004 D Plus25
070a762c 00000004 D More15
070a7630 00000004 D Maintenance15
070a7634 00000004 D KeyboardFilled25
070a7638 00000004 D Keyboard25
070a763c 00000004 D InfoFilled25
070a7640 00000004 D Info25
070a7644 00000004 D HandCursor15
070a7648 00000004 D Grid15
070a764c 00000004 D GameControllerFilled25
070a7650 00000004 D GameController25
070a7654 00000004 D GameController15
070a7658 00000004 D FolderFilled
070a765c 00000004 D File15
070a7660 00000004 D EnterKeyFilled15
070a7664 00000004 D EnterKey15
070a7668 00000004 D EditFilled25
070a766c 00000004 D Edit25
070a7670 00000004 D DuplicateFilled25
070a7674 00000004 D Duplicate25
070a7678 00000004 D DefaultKeyboardCustomIcon
070a767c 00000004 D CutFilled25
070a7680 00000004 D Cut25
070a7684 00000004 D Controller15
070a7688 00000004 D CloseWindowFilled20
070a768c 00000004 D CloseWindow20
070a7690 00000004 D ClipboardFilled25
070a7694 00000004 D Clipboard25
070a7698 00000004 D ClearSymbolFilled15
070a769c 00000004 D ClearSymbol15
070a76a0 00000004 D CheckedCheckbox
070a76a4 00000004 D CapsLockOnFilled15
070a76a8 00000004 D CapsLockOn15
070a76ac 00000004 D AddFavoriteFilled25
070a76b0 00000004 D AddFavorite25
070a76b4 00000004 D About15
070a76b8 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
070a76bc 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
070a76c0 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
070a76c4 00000004 d kCount
070a76c8 00000004 d kDelay
070a76cc 00000004 d kInterval
070a76d0 00000004 D __cxxabiv1::__unexpected_handler
070a76d4 00000004 D __cxxabiv1::__terminate_handler
070a76d8 0000000c d __sfp_recursive_mutex
070a76e4 0000000c d __sinit_recursive_mutex
070a76f0 00000004 D _impure_ptr
070a76f8 00000460 d impure_data
070a7b58 00000408 D __malloc_av_
070a7f60 00000004 D __malloc_sbrk_base
070a7f64 00000004 D __malloc_trim_threshold
070a7f68 0000000c d __malloc_recursive_mutex
070a7f74 00000004 d __tz_mutex
070a7f78 00000008 D _tzname
070a7f80 0000000c D __atexit_recursive_mutex
070a7f90 00000058 d tzinfo
070a7fe8 00000002 d numempty
070a7fec 0000016c D __global_locale
070a8158 00000004 D environ
070a815c 0000000c d __env_recursive_mutex
070a8168 00000004 d __hndl_lock
070a816c 0000000c d __stderr_handle
070a8178 0000000c d __stdin_handle
070a8184 0000000c d __stdout_handle
070a8190 00001000 d handles
070a9190 0000008c D devoptab_list
070a9230 d _GLOBAL_OFFSET_TABLE_
070a923c D __tdata_lma
070a9248 d __frame_dummy_init_array_entry
070a9248 D __init_array_start
070a9248 B __preinit_array_end
070a9248 B __preinit_array_start
070a9248 D __tdata_lma_end
070a92b0 d __do_global_dtors_aux_fini_array_entry
070a92b0 D __init_array_end
070a9308 D __bss_start__
070a9308 0000000c b CTRPluginFramework::InventoryModifier(CTRPluginFramework::MenuEntry*)::items
070a9314 0000000c b CTRPluginFramework::g_items
070a9320 00000010 b CTRPluginFramework::Invincible(CTRPluginFramework::MenuEntry*)::original
070a9330 00000004 b CTRPluginFramework::MoveFast(CTRPluginFramework::MenuEntry*)::jump
070a9334 00000004 b CTRPluginFramework::MoveFast(CTRPluginFramework::MenuEntry*)::jump
070a9338 00000004 b guard variable for CTRPluginFramework::InventoryModifier(CTRPluginFramework::MenuEntry*)::items
070a933c 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070a9348 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
070a934c 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
070a9350 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070a9354 00000004 b ncsndMutex
070a9358 00000004 b ncsndCmdCurOff
070a935c 00000004 b ncsndCmdStartOff
070a9360 00000004 B ncsndSharedMem
070a9364 00000004 B ncsndCSNDHandle
070a9368 00000004 B ncsndChannels
070a936c 00000004 b ncsndRefCount
070a9370 00000010 B ncsndOffsets
070a9380 00000004 B ncsndSharedMemSize
070a9384 00000004 b ncsndSharedMemBlock
070a9388 00000001 b ncsndCookieHooked
070a938c 0000000c b ncsndCookie
070a9398 b saved_stack
070a93a0 00000004 b cwavListCount
070a93a4 00000004 b cwavList
070a93a8 00000004 b cwavAddedToList
070a93ac b completed.1
070a93b0 b object.0
070a93c8 00000004 B CTRPluginFramework::Process::OnPauseResume
070a93cc 00000004 B CTRPluginFramework::Process::exceptionCallback
070a93d0 00000001 B CTRPluginFramework::Process::ThrowOldExceptionOnCallbackException
070a93d4 00000004 B CTRPluginFramework::Controller::_keysReleased
070a93d8 00000004 B CTRPluginFramework::Controller::_keysDown
070a93dc 00000004 B CTRPluginFramework::Controller::_keysHeld
070a93e0 00000004 b CTRPluginFramework::g_runningInstance
070a93e4 0000001c b CTRPluginFramework::g_dummy
070a9400 00000180 b CTRPluginFramework::g_keyName
070a9580 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070a9582 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070a9584 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070a9588 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070a958c 00000004 b g_onLoadCroHook
070a9590 00000004 b g_onLoadCroLock
070a9594 00000004 B CTRPluginFramework::g_keepEvent
070a9598 00000008 B CTRPluginFramework::_sdmcArchive
070a95a0 00000004 B CTRPluginFramework::g_keepThreadHandle
070a95a4 00000004 B CTRPluginFramework::g_continueGameEvent
070a95a8 00000008 b CTRPluginFramework::g_mainThread
070a95b0 00001000 b CTRPluginFramework::keepThreadStack
070aa5b0 00000004 b g_mainThreadVars
070aa5b4 00000004 b plgEvent
070aa5b8 00000004 b plgLdrArbiter
070aa5bc 00000004 b plgLdrHandle
070aa5c0 00000004 b plgLdrRefCount
070aa5c4 00000004 b plgReply
070aa5c8 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
070aa5cc 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
070aa5d0 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
070aa5d8 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
070aa5e0 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
070aa5e4 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
070aa5e8 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
070aa5f0 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
070aa5f8 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
070aa5fc 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
070aa600 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
070aa604 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
070aa60c 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
070aa610 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
070aa614 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
070aa618 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
070aa61c 00000004 B CTRPluginFramework::SystemImpl::AptStatus
070aa620 00000008 b CTRPluginFramework::g_sleepEvent
070aa628 00000004 B CTRPluginFramework::Screenshot::_filecount
070aa62c 00000008 B CTRPluginFramework::Screenshot::_readyEvent
070aa634 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
070aa63c 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
070aa640 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
070aa658 00000008 B CTRPluginFramework::Screenshot::Timer
070aa660 00000004 B CTRPluginFramework::Screenshot::_mode
070aa664 00000008 B CTRPluginFramework::Screenshot::_task
070aa66c 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
070aa688 00000008 B CTRPluginFramework::Screenshot::_timer
070aa690 00000004 B CTRPluginFramework::Screenshot::_display
070aa694 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
070aa698 00000001 B CTRPluginFramework::Screenshot::IsEnabled
070aa69c 00000004 b CTRPluginFramework::isReady
070aa6a0 00000004 B CTRPluginFramework::ScreenImpl::Top
070aa6a4 00000004 B CTRPluginFramework::ScreenImpl::Bottom
070aa6a8 000000ac b CTRPluginFramework::_botBuf
070aa754 000000ac b CTRPluginFramework::_topBuf
070aa800 000000a8 B CTRPluginFramework::Scheduler::_singleton
070aa8a8 00000004 B CTRPluginFramework::ProcessImpl::MainThread
070aa8ac 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
070aa8b8 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
070aa8bc 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
070aa8c8 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
070aa8d8 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
070aa8dc 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
070aa8e0 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
070aa8e4 00000004 B CTRPluginFramework::ProcessImpl::Status
070aa8e8 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
070aa950 00000008 B CTRPluginFramework::ProcessImpl::TitleId
070aa958 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
070aa95c 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
070aa960 00000044 b CTRPluginFramework::g_previousException
070aa9a4 0000001c B CTRPluginFramework::HookManager::_singleton
070aa9c0 0000000c b sAddrMap
070aa9cc 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
070aa9d0 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
070aa9d4 00000008 b CTRPluginFramework::Heap::g_heapPool
070aa9dc 0000000c b CTRPluginFramework::Heap::_mutex
070aa9e8 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
070aaa00 0000000c B CTRPluginFramework::FSPath::FSMutex
070aaa0c 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
070aaa18 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
070aaa1c 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
070aaa28 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
070aaa2c 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
070aaa30 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
070aaa34 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070aaa38 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
070aaa3c 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
070aaa40 00000004 b CTRPluginFramework::g_bymeString
070aaa44 00000004 b CTRPluginFramework::g_ctrpfString
070aaa48 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
070aaa50 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070aaa58 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
070aaa60 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
070aaa68 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
070aaa6c 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
070aaa74 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
070aaa78 00000004 b CTRPluginFramework::g_radioId
070aaa7c 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
070aaa80 00000004 b CTRPluginFramework::__pmARinstance
070aaa84 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
070aaa8c 00000004 B CTRPluginFramework::MenuItem::_uidCounter
070aaa90 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070aaa94 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
070aaa98 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
070aaa9c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070aaaa0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
070aaaa4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
070aaaa8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070aaaac 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070aaab0 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
070aaabc 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
070aaac8 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
070aaad8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070aaae0 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
070aaae4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
070aaaf4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
070aab08 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070aab10 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
070aab20 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
070aab30 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070aab40 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070aab50 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
070aab54 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
070aab58 00000004 B CTRPluginFramework::__g_hexEditor
070aab5c 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
070aab6c 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
070aab70 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
070aab74 00000010 b CTRPluginFramework::GuideReader::Draw()::background
070aab84 00000004 b CTRPluginFramework::__converter
070aab88 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
070aab98 00000028 B CTRPluginFramework::Window::BottomWindow
070aabc0 00000028 B CTRPluginFramework::Window::TopWindow
070aabe8 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
070aabec 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
070aabf8 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
070aabfc 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
070aac00 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
070aac04 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
070aac10 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
070aac18 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
070aac1c 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
070aac40 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
070aac58 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
070aac5c 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
070aac60 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
070aac64 0000000c B CTRPluginFramework::OSDImpl::Notifications
070aac70 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
070aac78 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
070aac80 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
070aac88 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
070aac90 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
070aac98 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
070aac9c 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
070aaca8 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
070aacac 00000004 B CTRPluginFramework::OSDImpl::OSDHook
070aacb0 0000000c B CTRPluginFramework::OSDImpl::RecLock
070aacbc 0000000c B CTRPluginFramework::OSDImpl::Callbacks
070aacc8 00000018 B CTRPluginFramework::OSDImpl::TopScreen
070aace0 00000050 b CTRPluginFramework::g_fpsCounter
070aad30 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
070aad34 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
070aad50 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
070aad54 00000004 B CTRPluginFramework::g_fontAllocated
070aad58 00000004 B CTRPluginFramework::g_glyphAllocated
070aad5c 0000000c B CTRPluginFramework::Font::_mutex
070aad68 00000004 B CTRPluginFramework::ARHandler::ActiveData
070aad6c 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
070aad70 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
070aad74 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
070aad78 00000010 B CTRPluginFramework::ARHandler::Data
070aad88 00000008 B CTRPluginFramework::ARHandler::Offset
070aad90 00000008 B CTRPluginFramework::ARHandler::Storage
070aad98 00000001 b CTRPluginFramework::ToggleFloat
070aada0 00000fa0 b CTRPluginFramework::arStack
070abd40 00000004 b CTRPluginFramework::g_context
070abd44 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
070abd48 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
070abd54 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
070abd58 00000004 b CTRPluginFramework::__arCodeEditor
070abd5c 00000001 b CTRPluginFramework::g_condAgainstData
070abd5d 00000001 b CTRPluginFramework::g_newCondDataToggle
070abd60 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
070abd6c 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
070abd70 0000000c B CTRPluginFramework::g_codeTypes
070abd7c 00000008 B CTRPluginFramework::Preferences::Backlights
070abd84 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
070abd9c 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
070abdb4 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
070abdcc 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
070abdd0 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
070abdd4 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
070abdd8 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
070abde0 00000008 B CTRPluginFramework::Preferences::Flags
070abde8 000000a8 B CTRPluginFramework::Preferences::Settings
070abe90 000009c4 b CTRPluginFramework::g_rng
070ac854 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070ac858 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070ac870 0000000c b __mutex
070ac87c 00000018 b __threads
070ac894 00000004 B CTRPluginFramework::System::OnAbort
070ac898 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
070ac89c 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
070ac8a0 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
070ac8a4 00000010 b CTRPluginFramework::SubMenu::Draw()::background
070ac8b4 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
070ac8b8 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
070ac8bc 00000004 b CTRPluginFramework::g_HookMode
070ac8c0 00000004 b CTRPluginFramework::g_OpenFileLock
070ac8c8 00000040 b CTRPluginFramework::g_hookExportFile
070ac908 00000004 b CTRPluginFramework::g_screenshotEntry
070ac90c 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
070ac910 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
070ac914 00000004 b CTRPluginFramework::g_mode
070ac918 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
070ac920 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
070ac924 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
070ac928 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
070ac92c 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
070ac93c 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
070ac94c 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
070ac950 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
070ac958 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
070ac960 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
070ac968 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
070ac96c 00000001 b CTRPluginFramework::g_progressLoop
070ac970 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
070ac980 00000004 B CTRPluginFramework::_pool
070ac984 00000004 b arbiter
070ac988 00000004 B g_sharedFont
070ac98c 00000004 b sharedFontAddr
070ac990 00000004 b srvHandle
070ac994 00000004 b srvRefCount
070ac998 00000004 b currentAddr
070ac99c 00000004 b maxAddr
070ac9a0 00000004 b minAddr
070ac9a4 00000004 b cfguHandle
070ac9a8 00000004 b cfguRefCount
070ac9ac 00000004 b gspEvent
070ac9b0 00000004 b gspEventThread
070ac9b4 00000004 b gspGpuHandle
070ac9b8 00000001 b gspGpuRight
070ac9bc 00000004 b gspRefCount
070ac9c0 00000001 b gspRunEvents
070ac9c4 00000004 b gspSharedMem
070ac9c8 00000004 b gspSharedMemHandle
070ac9cc 00000004 b acHandle
070ac9d0 00000004 b acRefCount
070ac9d4 00000004 b amHandle
070ac9d8 00000004 b amRefCount
070ac9dc 0000000c b aptFirstHook
070ac9e8 00000004 b aptLockHandle
070ac9ec 00000001 b flagInit.1
070ac9ed 00000001 b flagValue.0
070ac9f0 00000004 b serviceName.6
070ac9f4 00000006 b aVec
070ac9fc 00000004 b cPos
070aca00 00000006 b gRate
070aca08 00000014 B hidEvents
070aca1c 00000004 B hidHandle
070aca20 00000004 B hidMemHandle
070aca24 00000004 b hidRefCount
070aca28 00000004 B hidSharedMem
070aca2c 00000004 b kDown
070aca30 00000004 b kHeld
070aca34 00000004 b kOld
070aca38 00000004 b kRepeat
070aca3c 00000004 b kUp
070aca40 00000004 b tPos
070aca44 00000001 b usingIrrst
070aca48 00000004 b srvPmHandle
070aca50 00000080 b fsExemptArchives
070acad0 00000004 b fsuHandle
070acad4 00000004 b fsuRefCount
070acad8 00000004 B __ctru_heap
070acadc 00000004 V __ctru_heap_size
070acae0 00000004 B __ctru_linear_heap
070acae4 00000004 b csPos
070acae8 00000004 B irrstEvent
070acaec 00000004 B irrstHandle
070acaf0 00000004 B irrstMemHandle
070acaf4 00000004 b irrstRefCount
070acaf8 00000004 B irrstSharedMem
070acafc 00000004 b kHeld
070acb00 00000004 b (anonymous namespace)::__new_handler
070acb04 00000010 b (anonymous namespace)::emergency_pool
070acb14 0000000c b eh_globals
070acb20 00000010 V std::string::_Rep::_S_empty_rep_storage
070acb30 00000028 B __malloc_current_mallinfo
070acb58 00000004 B __malloc_max_sbrked_mem
070acb5c 00000004 B __malloc_max_total_mem
070acb60 00000004 B __malloc_top_pad
070acb64 0000000b b __tzname_dst
070acb70 0000000b b __tzname_std
070acb7c 00000004 b prev_tzenv
070acb80 00000004 B _daylight
070acb84 00000004 B _timezone
070acb88 00000004 b initial_env
070acb8c 00000004 b heap_start.0
070acb90 00000004 B fake_heap_end
070acb94 00000004 B fake_heap_start
070acb98 00000048 B __syscalls
070acbe0 B __tls_start
070acc08 B __bss_end__
070acc08 A __end__
070acc08 B __tls_end
